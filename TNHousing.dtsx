<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="3/24/2025 12:52:59 PM"
  DTS:CreationName="Microsoft.Package"
  DTS:CreatorComputerName="TPV"
  DTS:CreatorName="TPV\Tim"
  DTS:DTSID="{B7EBDDE5-853A-4F4B-B1C2-6F19B4F27696}"
  DTS:ExecutableType="Microsoft.Package"
  DTS:LastModifiedProductVersion="16.0.5685.0"
  DTS:LocaleID="1033"
  DTS:ObjectName="TNHousing"
  DTS:PackageType="5"
  DTS:VersionBuild="33"
  DTS:VersionGUID="{CF331712-FDC9-45A5-9D8E-A59D16401D76}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">8</DTS:Property>
  <DTS:ConnectionManagers>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[Excel Connection Manager]"
      DTS:CreationName="EXCEL"
      DTS:DTSID="{85B374DE-7CAB-4754-B32A-03976F83F73B}"
      DTS:ObjectName="Excel Connection Manager">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectRetryCount="0"
          DTS:ConnectRetryInterval="0"
          DTS:ConnectionString="Provider=Microsoft.ACE.OLEDB.12.0;Data Source=E:\Repos\TennesseeHousingETL\Nashville Housing Data for Data Cleaning.xlsx;Extended Properties=&quot;EXCEL 12.0 XML;HDR=YES&quot;;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[TPV.Sandbox]"
      DTS:CreationName="OLEDB"
      DTS:DTSID="{1779E4DB-4122-4F2B-BEDC-CF384137D7F4}"
      DTS:ObjectName="TPV.Sandbox">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectRetryCount="1"
          DTS:ConnectRetryInterval="5"
          DTS:ConnectionString="Data Source=TPV;Initial Catalog=Sandbox;Provider=SQLOLEDB.1;Integrated Security=SSPI;Application Name=SSIS-TNHousing-{1779E4DB-4122-4F2B-BEDC-CF384137D7F4}TPV.Sandbox;Auto Translate=False;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
  </DTS:ConnectionManagers>
  <DTS:Variables />
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\Data Flow Task"
      DTS:CreationName="Microsoft.Pipeline"
      DTS:Description="Data Flow Task"
      DTS:DTSID="{158C577F-E438-4A2B-808C-2B1E2473496B}"
      DTS:ExecutableType="Microsoft.Pipeline"
      DTS:LocaleID="-1"
      DTS:ObjectName="Data Flow Task"
      DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
      <DTS:Variables />
      <DTS:ObjectData>
        <pipeline
          version="1">
          <components>
            <component
              refId="Package\Data Flow Task\Convert Data"
              componentClassID="Microsoft.DataConvert"
              contactInfo="Data Conversion;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Data Conversion"
              name="Convert Data"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\Data Flow Task\Convert Data.Inputs[Data Conversion Input]"
                  name="Data Conversion Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Data Flow Task\Convert Data.Inputs[Data Conversion Input].Columns[PropertyAddress]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="PropertyAddress"
                      lineageId="Package\Data Flow Task\Excel Source.Outputs[Excel Source Output].Columns[PropertyAddress]" />
                    <inputColumn
                      refId="Package\Data Flow Task\Convert Data.Inputs[Data Conversion Input].Columns[OwnerAddress]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="OwnerAddress"
                      lineageId="Package\Data Flow Task\Excel Source.Outputs[Excel Source Output].Columns[OwnerAddress]" />
                    <inputColumn
                      refId="Package\Data Flow Task\Convert Data.Inputs[Data Conversion Input].Columns[UniqueID]"
                      cachedDataType="r8"
                      cachedName="UniqueID "
                      lineageId="Package\Data Flow Task\Excel Source.Outputs[Excel Source Output].Columns[UniqueID ]"
                      name="UniqueID" />
                    <inputColumn
                      refId="Package\Data Flow Task\Convert Data.Inputs[Data Conversion Input].Columns[SaleDate]"
                      cachedDataType="date"
                      cachedName="SaleDate"
                      lineageId="Package\Data Flow Task\Excel Source.Outputs[Excel Source Output].Columns[SaleDate]" />
                    <inputColumn
                      refId="Package\Data Flow Task\Convert Data.Inputs[Data Conversion Input].Columns[SalePrice]"
                      cachedDataType="r8"
                      cachedName="SalePrice"
                      lineageId="Package\Data Flow Task\Excel Source.Outputs[Excel Source Output].Columns[SalePrice]" />
                    <inputColumn
                      refId="Package\Data Flow Task\Convert Data.Inputs[Data Conversion Input].Columns[Acreage]"
                      cachedDataType="r8"
                      cachedName="Acreage"
                      lineageId="Package\Data Flow Task\Excel Source.Outputs[Excel Source Output].Columns[Acreage]" />
                    <inputColumn
                      refId="Package\Data Flow Task\Convert Data.Inputs[Data Conversion Input].Columns[LandValue]"
                      cachedDataType="r8"
                      cachedName="LandValue"
                      lineageId="Package\Data Flow Task\Excel Source.Outputs[Excel Source Output].Columns[LandValue]" />
                    <inputColumn
                      refId="Package\Data Flow Task\Convert Data.Inputs[Data Conversion Input].Columns[BuildingValue]"
                      cachedDataType="r8"
                      cachedName="BuildingValue"
                      lineageId="Package\Data Flow Task\Excel Source.Outputs[Excel Source Output].Columns[BuildingValue]" />
                    <inputColumn
                      refId="Package\Data Flow Task\Convert Data.Inputs[Data Conversion Input].Columns[Bedrooms]"
                      cachedDataType="r8"
                      cachedName="Bedrooms"
                      lineageId="Package\Data Flow Task\Excel Source.Outputs[Excel Source Output].Columns[Bedrooms]" />
                    <inputColumn
                      refId="Package\Data Flow Task\Convert Data.Inputs[Data Conversion Input].Columns[FullBath]"
                      cachedDataType="r8"
                      cachedName="FullBath"
                      lineageId="Package\Data Flow Task\Excel Source.Outputs[Excel Source Output].Columns[FullBath]" />
                    <inputColumn
                      refId="Package\Data Flow Task\Convert Data.Inputs[Data Conversion Input].Columns[HalfBath]"
                      cachedDataType="r8"
                      cachedName="HalfBath"
                      lineageId="Package\Data Flow Task\Excel Source.Outputs[Excel Source Output].Columns[HalfBath]" />
                    <inputColumn
                      refId="Package\Data Flow Task\Convert Data.Inputs[Data Conversion Input].Columns[YearBuilt]"
                      cachedDataType="r8"
                      cachedName="YearBuilt"
                      lineageId="Package\Data Flow Task\Excel Source.Outputs[Excel Source Output].Columns[YearBuilt]" />
                    <inputColumn
                      refId="Package\Data Flow Task\Convert Data.Inputs[Data Conversion Input].Columns[TaxDistrict]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="TaxDistrict"
                      lineageId="Package\Data Flow Task\Excel Source.Outputs[Excel Source Output].Columns[TaxDistrict]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Data Flow Task\Convert Data.Outputs[Data Conversion Output]"
                  exclusionGroup="1"
                  name="Data Conversion Output"
                  synchronousInputId="Package\Data Flow Task\Convert Data.Inputs[Data Conversion Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Data Flow Task\Convert Data.Outputs[Data Conversion Output].Columns[Copy of PropertyAddress]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      length="255"
                      lineageId="Package\Data Flow Task\Convert Data.Outputs[Data Conversion Output].Columns[Copy of PropertyAddress]"
                      name="Copy of PropertyAddress"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the input column used as the source of data for the conversion."
                          name="SourceInputColumnLineageID">#{Package\Data Flow Task\Excel Source.Outputs[Excel Source Output].Columns[PropertyAddress]}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Data Flow Task\Convert Data.Outputs[Data Conversion Output].Columns[Copy of OwnerAddress]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      length="255"
                      lineageId="Package\Data Flow Task\Convert Data.Outputs[Data Conversion Output].Columns[Copy of OwnerAddress]"
                      name="Copy of OwnerAddress"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the input column used as the source of data for the conversion."
                          name="SourceInputColumnLineageID">#{Package\Data Flow Task\Excel Source.Outputs[Excel Source Output].Columns[OwnerAddress]}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Data Flow Task\Convert Data.Outputs[Data Conversion Output].Columns[Copy of UniqueID]"
                      dataType="i4"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Data Flow Task\Convert Data.Outputs[Data Conversion Output].Columns[Copy of UniqueID]"
                      name="Copy of UniqueID"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the input column used as the source of data for the conversion."
                          name="SourceInputColumnLineageID">#{Package\Data Flow Task\Excel Source.Outputs[Excel Source Output].Columns[UniqueID ]}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Data Flow Task\Convert Data.Outputs[Data Conversion Output].Columns[Copy of SaleDate]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      length="50"
                      lineageId="Package\Data Flow Task\Convert Data.Outputs[Data Conversion Output].Columns[Copy of SaleDate]"
                      name="Copy of SaleDate"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the input column used as the source of data for the conversion."
                          name="SourceInputColumnLineageID">#{Package\Data Flow Task\Excel Source.Outputs[Excel Source Output].Columns[SaleDate]}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Data Flow Task\Convert Data.Outputs[Data Conversion Output].Columns[Copy of SalePrice]"
                      dataType="i4"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Data Flow Task\Convert Data.Outputs[Data Conversion Output].Columns[Copy of SalePrice]"
                      name="Copy of SalePrice"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the input column used as the source of data for the conversion."
                          name="SourceInputColumnLineageID">#{Package\Data Flow Task\Excel Source.Outputs[Excel Source Output].Columns[SalePrice]}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Data Flow Task\Convert Data.Outputs[Data Conversion Output].Columns[Copy of Acreage]"
                      dataType="numeric"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Data Flow Task\Convert Data.Outputs[Data Conversion Output].Columns[Copy of Acreage]"
                      name="Copy of Acreage"
                      precision="18"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the input column used as the source of data for the conversion."
                          name="SourceInputColumnLineageID">#{Package\Data Flow Task\Excel Source.Outputs[Excel Source Output].Columns[Acreage]}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Data Flow Task\Convert Data.Outputs[Data Conversion Output].Columns[Copy of LandValue]"
                      dataType="i4"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Data Flow Task\Convert Data.Outputs[Data Conversion Output].Columns[Copy of LandValue]"
                      name="Copy of LandValue"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the input column used as the source of data for the conversion."
                          name="SourceInputColumnLineageID">#{Package\Data Flow Task\Excel Source.Outputs[Excel Source Output].Columns[LandValue]}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Data Flow Task\Convert Data.Outputs[Data Conversion Output].Columns[Copy of BuildingValue]"
                      dataType="i4"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Data Flow Task\Convert Data.Outputs[Data Conversion Output].Columns[Copy of BuildingValue]"
                      name="Copy of BuildingValue"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the input column used as the source of data for the conversion."
                          name="SourceInputColumnLineageID">#{Package\Data Flow Task\Excel Source.Outputs[Excel Source Output].Columns[BuildingValue]}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Data Flow Task\Convert Data.Outputs[Data Conversion Output].Columns[Copy of Bedrooms]"
                      dataType="i4"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Data Flow Task\Convert Data.Outputs[Data Conversion Output].Columns[Copy of Bedrooms]"
                      name="Copy of Bedrooms"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the input column used as the source of data for the conversion."
                          name="SourceInputColumnLineageID">#{Package\Data Flow Task\Excel Source.Outputs[Excel Source Output].Columns[Bedrooms]}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Data Flow Task\Convert Data.Outputs[Data Conversion Output].Columns[Copy of FullBath]"
                      dataType="i4"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Data Flow Task\Convert Data.Outputs[Data Conversion Output].Columns[Copy of FullBath]"
                      name="Copy of FullBath"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the input column used as the source of data for the conversion."
                          name="SourceInputColumnLineageID">#{Package\Data Flow Task\Excel Source.Outputs[Excel Source Output].Columns[FullBath]}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Data Flow Task\Convert Data.Outputs[Data Conversion Output].Columns[Copy of HalfBath]"
                      dataType="i4"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Data Flow Task\Convert Data.Outputs[Data Conversion Output].Columns[Copy of HalfBath]"
                      name="Copy of HalfBath"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the input column used as the source of data for the conversion."
                          name="SourceInputColumnLineageID">#{Package\Data Flow Task\Excel Source.Outputs[Excel Source Output].Columns[HalfBath]}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Data Flow Task\Convert Data.Outputs[Data Conversion Output].Columns[Copy of YearBuilt]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      length="10"
                      lineageId="Package\Data Flow Task\Convert Data.Outputs[Data Conversion Output].Columns[Copy of YearBuilt]"
                      name="Copy of YearBuilt"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the input column used as the source of data for the conversion."
                          name="SourceInputColumnLineageID">#{Package\Data Flow Task\Excel Source.Outputs[Excel Source Output].Columns[YearBuilt]}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Data Flow Task\Convert Data.Outputs[Data Conversion Output].Columns[Copy of TaxDistrict]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      length="100"
                      lineageId="Package\Data Flow Task\Convert Data.Outputs[Data Conversion Output].Columns[Copy of TaxDistrict]"
                      name="Copy of TaxDistrict"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the input column used as the source of data for the conversion."
                          name="SourceInputColumnLineageID">#{Package\Data Flow Task\Excel Source.Outputs[Excel Source Output].Columns[TaxDistrict]}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Data Flow Task\Convert Data.Outputs[Data Conversion Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Data Conversion Error Output"
                  synchronousInputId="Package\Data Flow Task\Convert Data.Inputs[Data Conversion Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Data Flow Task\Convert Data.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Data Flow Task\Convert Data.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Data Flow Task\Convert Data.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Data Flow Task\Convert Data.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Data Flow Task\Convert SoldAsVacant to boolean"
              componentClassID="Microsoft.DerivedColumn"
              contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
              name="Convert SoldAsVacant to boolean"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\Data Flow Task\Convert SoldAsVacant to boolean.Inputs[Derived Column Input]"
                  description="Input to the Derived Column Transformation"
                  name="Derived Column Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Data Flow Task\Convert SoldAsVacant to boolean.Inputs[Derived Column Input].Columns[SoldAsVacant]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="SoldAsVacant"
                      lineageId="Package\Data Flow Task\Excel Source.Outputs[Excel Source Output].Columns[SoldAsVacant]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Data Flow Task\Convert SoldAsVacant to boolean.Outputs[Derived Column Output]"
                  description="Default Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  name="Derived Column Output"
                  synchronousInputId="Package\Data Flow Task\Convert SoldAsVacant to boolean.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Data Flow Task\Convert SoldAsVacant to boolean.Outputs[Derived Column Output].Columns[SoldAsVacant_Bool]"
                      dataType="bool"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Data Flow Task\Convert SoldAsVacant to boolean.Outputs[Derived Column Output].Columns[SoldAsVacant_Bool]"
                      name="SoldAsVacant_Bool"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">[SUBSTRING](#{Package\Data Flow Task\Excel Source.Outputs[Excel Source Output].Columns[SoldAsVacant]},1,1) == "Y" ?  TRUE  :  FALSE </property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">SUBSTRING(SoldAsVacant,1,1) == "Y" ?  TRUE  :  FALSE </property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Data Flow Task\Convert SoldAsVacant to boolean.Outputs[Derived Column Error Output]"
                  description="Error Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Derived Column Error Output"
                  synchronousInputId="Package\Data Flow Task\Convert SoldAsVacant to boolean.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Data Flow Task\Convert SoldAsVacant to boolean.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Data Flow Task\Convert SoldAsVacant to boolean.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Data Flow Task\Convert SoldAsVacant to boolean.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Data Flow Task\Convert SoldAsVacant to boolean.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Data Flow Task\Excel Source"
              componentClassID="Microsoft.ExcelSource"
              contactInfo="Excel Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
              description="Excel Source"
              name="Excel Source"
              usesDispositions="true"
              version="1">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">Sheet1$</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                <property
                  dataType="System.String"
                  description="The variable that contains the SQL command to be executed."
                  name="SqlCommandVariable"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">0</property>
                <property
                  dataType="System.String"
                  description="The mapping from parameters in the SQL command to variables."
                  name="ParameterMapping"></property>
              </properties>
              <connections>
                <connection
                  refId="Package\Data Flow Task\Excel Source.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[Excel Connection Manager]"
                  connectionManagerRefId="Package.ConnectionManagers[Excel Connection Manager]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <outputs>
                <output
                  refId="Package\Data Flow Task\Excel Source.Outputs[Excel Source Output]"
                  name="Excel Source Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Data Flow Task\Excel Source.Outputs[Excel Source Output].Columns[UniqueID ]"
                      dataType="r8"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Data Flow Task\Excel Source.Outputs[Excel Source Output].ExternalColumns[UniqueID ]"
                      lineageId="Package\Data Flow Task\Excel Source.Outputs[Excel Source Output].Columns[UniqueID ]"
                      name="UniqueID "
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Data Flow Task\Excel Source.Outputs[Excel Source Output].Columns[ParcelID]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Data Flow Task\Excel Source.Outputs[Excel Source Output].ExternalColumns[ParcelID]"
                      length="255"
                      lineageId="Package\Data Flow Task\Excel Source.Outputs[Excel Source Output].Columns[ParcelID]"
                      name="ParcelID"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Data Flow Task\Excel Source.Outputs[Excel Source Output].Columns[LandUse]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Data Flow Task\Excel Source.Outputs[Excel Source Output].ExternalColumns[LandUse]"
                      length="255"
                      lineageId="Package\Data Flow Task\Excel Source.Outputs[Excel Source Output].Columns[LandUse]"
                      name="LandUse"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Data Flow Task\Excel Source.Outputs[Excel Source Output].Columns[PropertyAddress]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Data Flow Task\Excel Source.Outputs[Excel Source Output].ExternalColumns[PropertyAddress]"
                      length="255"
                      lineageId="Package\Data Flow Task\Excel Source.Outputs[Excel Source Output].Columns[PropertyAddress]"
                      name="PropertyAddress"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Data Flow Task\Excel Source.Outputs[Excel Source Output].Columns[SaleDate]"
                      dataType="date"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Data Flow Task\Excel Source.Outputs[Excel Source Output].ExternalColumns[SaleDate]"
                      lineageId="Package\Data Flow Task\Excel Source.Outputs[Excel Source Output].Columns[SaleDate]"
                      name="SaleDate"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Data Flow Task\Excel Source.Outputs[Excel Source Output].Columns[SalePrice]"
                      dataType="r8"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Data Flow Task\Excel Source.Outputs[Excel Source Output].ExternalColumns[SalePrice]"
                      lineageId="Package\Data Flow Task\Excel Source.Outputs[Excel Source Output].Columns[SalePrice]"
                      name="SalePrice"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Data Flow Task\Excel Source.Outputs[Excel Source Output].Columns[LegalReference]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Data Flow Task\Excel Source.Outputs[Excel Source Output].ExternalColumns[LegalReference]"
                      length="255"
                      lineageId="Package\Data Flow Task\Excel Source.Outputs[Excel Source Output].Columns[LegalReference]"
                      name="LegalReference"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Data Flow Task\Excel Source.Outputs[Excel Source Output].Columns[SoldAsVacant]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Data Flow Task\Excel Source.Outputs[Excel Source Output].ExternalColumns[SoldAsVacant]"
                      length="255"
                      lineageId="Package\Data Flow Task\Excel Source.Outputs[Excel Source Output].Columns[SoldAsVacant]"
                      name="SoldAsVacant"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Data Flow Task\Excel Source.Outputs[Excel Source Output].Columns[OwnerName]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Data Flow Task\Excel Source.Outputs[Excel Source Output].ExternalColumns[OwnerName]"
                      length="255"
                      lineageId="Package\Data Flow Task\Excel Source.Outputs[Excel Source Output].Columns[OwnerName]"
                      name="OwnerName"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Data Flow Task\Excel Source.Outputs[Excel Source Output].Columns[OwnerAddress]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Data Flow Task\Excel Source.Outputs[Excel Source Output].ExternalColumns[OwnerAddress]"
                      length="255"
                      lineageId="Package\Data Flow Task\Excel Source.Outputs[Excel Source Output].Columns[OwnerAddress]"
                      name="OwnerAddress"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Data Flow Task\Excel Source.Outputs[Excel Source Output].Columns[Acreage]"
                      dataType="r8"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Data Flow Task\Excel Source.Outputs[Excel Source Output].ExternalColumns[Acreage]"
                      lineageId="Package\Data Flow Task\Excel Source.Outputs[Excel Source Output].Columns[Acreage]"
                      name="Acreage"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Data Flow Task\Excel Source.Outputs[Excel Source Output].Columns[TaxDistrict]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Data Flow Task\Excel Source.Outputs[Excel Source Output].ExternalColumns[TaxDistrict]"
                      length="255"
                      lineageId="Package\Data Flow Task\Excel Source.Outputs[Excel Source Output].Columns[TaxDistrict]"
                      name="TaxDistrict"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Data Flow Task\Excel Source.Outputs[Excel Source Output].Columns[LandValue]"
                      dataType="r8"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Data Flow Task\Excel Source.Outputs[Excel Source Output].ExternalColumns[LandValue]"
                      lineageId="Package\Data Flow Task\Excel Source.Outputs[Excel Source Output].Columns[LandValue]"
                      name="LandValue"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Data Flow Task\Excel Source.Outputs[Excel Source Output].Columns[BuildingValue]"
                      dataType="r8"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Data Flow Task\Excel Source.Outputs[Excel Source Output].ExternalColumns[BuildingValue]"
                      lineageId="Package\Data Flow Task\Excel Source.Outputs[Excel Source Output].Columns[BuildingValue]"
                      name="BuildingValue"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Data Flow Task\Excel Source.Outputs[Excel Source Output].Columns[TotalValue]"
                      dataType="r8"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Data Flow Task\Excel Source.Outputs[Excel Source Output].ExternalColumns[TotalValue]"
                      lineageId="Package\Data Flow Task\Excel Source.Outputs[Excel Source Output].Columns[TotalValue]"
                      name="TotalValue"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Data Flow Task\Excel Source.Outputs[Excel Source Output].Columns[YearBuilt]"
                      dataType="r8"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Data Flow Task\Excel Source.Outputs[Excel Source Output].ExternalColumns[YearBuilt]"
                      lineageId="Package\Data Flow Task\Excel Source.Outputs[Excel Source Output].Columns[YearBuilt]"
                      name="YearBuilt"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Data Flow Task\Excel Source.Outputs[Excel Source Output].Columns[Bedrooms]"
                      dataType="r8"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Data Flow Task\Excel Source.Outputs[Excel Source Output].ExternalColumns[Bedrooms]"
                      lineageId="Package\Data Flow Task\Excel Source.Outputs[Excel Source Output].Columns[Bedrooms]"
                      name="Bedrooms"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Data Flow Task\Excel Source.Outputs[Excel Source Output].Columns[FullBath]"
                      dataType="r8"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Data Flow Task\Excel Source.Outputs[Excel Source Output].ExternalColumns[FullBath]"
                      lineageId="Package\Data Flow Task\Excel Source.Outputs[Excel Source Output].Columns[FullBath]"
                      name="FullBath"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Data Flow Task\Excel Source.Outputs[Excel Source Output].Columns[HalfBath]"
                      dataType="r8"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Data Flow Task\Excel Source.Outputs[Excel Source Output].ExternalColumns[HalfBath]"
                      lineageId="Package\Data Flow Task\Excel Source.Outputs[Excel Source Output].Columns[HalfBath]"
                      name="HalfBath"
                      truncationRowDisposition="FailComponent" />
                  </outputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Data Flow Task\Excel Source.Outputs[Excel Source Output].ExternalColumns[UniqueID ]"
                      dataType="r8"
                      name="UniqueID " />
                    <externalMetadataColumn
                      refId="Package\Data Flow Task\Excel Source.Outputs[Excel Source Output].ExternalColumns[ParcelID]"
                      dataType="wstr"
                      length="255"
                      name="ParcelID" />
                    <externalMetadataColumn
                      refId="Package\Data Flow Task\Excel Source.Outputs[Excel Source Output].ExternalColumns[LandUse]"
                      dataType="wstr"
                      length="255"
                      name="LandUse" />
                    <externalMetadataColumn
                      refId="Package\Data Flow Task\Excel Source.Outputs[Excel Source Output].ExternalColumns[PropertyAddress]"
                      dataType="wstr"
                      length="255"
                      name="PropertyAddress" />
                    <externalMetadataColumn
                      refId="Package\Data Flow Task\Excel Source.Outputs[Excel Source Output].ExternalColumns[SaleDate]"
                      dataType="date"
                      name="SaleDate" />
                    <externalMetadataColumn
                      refId="Package\Data Flow Task\Excel Source.Outputs[Excel Source Output].ExternalColumns[SalePrice]"
                      dataType="r8"
                      name="SalePrice" />
                    <externalMetadataColumn
                      refId="Package\Data Flow Task\Excel Source.Outputs[Excel Source Output].ExternalColumns[LegalReference]"
                      dataType="wstr"
                      length="255"
                      name="LegalReference" />
                    <externalMetadataColumn
                      refId="Package\Data Flow Task\Excel Source.Outputs[Excel Source Output].ExternalColumns[SoldAsVacant]"
                      dataType="wstr"
                      length="255"
                      name="SoldAsVacant" />
                    <externalMetadataColumn
                      refId="Package\Data Flow Task\Excel Source.Outputs[Excel Source Output].ExternalColumns[OwnerName]"
                      dataType="wstr"
                      length="255"
                      name="OwnerName" />
                    <externalMetadataColumn
                      refId="Package\Data Flow Task\Excel Source.Outputs[Excel Source Output].ExternalColumns[OwnerAddress]"
                      dataType="wstr"
                      length="255"
                      name="OwnerAddress" />
                    <externalMetadataColumn
                      refId="Package\Data Flow Task\Excel Source.Outputs[Excel Source Output].ExternalColumns[Acreage]"
                      dataType="r8"
                      name="Acreage" />
                    <externalMetadataColumn
                      refId="Package\Data Flow Task\Excel Source.Outputs[Excel Source Output].ExternalColumns[TaxDistrict]"
                      dataType="wstr"
                      length="255"
                      name="TaxDistrict" />
                    <externalMetadataColumn
                      refId="Package\Data Flow Task\Excel Source.Outputs[Excel Source Output].ExternalColumns[LandValue]"
                      dataType="r8"
                      name="LandValue" />
                    <externalMetadataColumn
                      refId="Package\Data Flow Task\Excel Source.Outputs[Excel Source Output].ExternalColumns[BuildingValue]"
                      dataType="r8"
                      name="BuildingValue" />
                    <externalMetadataColumn
                      refId="Package\Data Flow Task\Excel Source.Outputs[Excel Source Output].ExternalColumns[TotalValue]"
                      dataType="r8"
                      name="TotalValue" />
                    <externalMetadataColumn
                      refId="Package\Data Flow Task\Excel Source.Outputs[Excel Source Output].ExternalColumns[YearBuilt]"
                      dataType="r8"
                      name="YearBuilt" />
                    <externalMetadataColumn
                      refId="Package\Data Flow Task\Excel Source.Outputs[Excel Source Output].ExternalColumns[Bedrooms]"
                      dataType="r8"
                      name="Bedrooms" />
                    <externalMetadataColumn
                      refId="Package\Data Flow Task\Excel Source.Outputs[Excel Source Output].ExternalColumns[FullBath]"
                      dataType="r8"
                      name="FullBath" />
                    <externalMetadataColumn
                      refId="Package\Data Flow Task\Excel Source.Outputs[Excel Source Output].ExternalColumns[HalfBath]"
                      dataType="r8"
                      name="HalfBath" />
                  </externalMetadataColumns>
                </output>
                <output
                  refId="Package\Data Flow Task\Excel Source.Outputs[Excel Source Error Output]"
                  isErrorOut="true"
                  name="Excel Source Error Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Data Flow Task\Excel Source.Outputs[Excel Source Error Output].Columns[UniqueID ]"
                      dataType="r8"
                      lineageId="Package\Data Flow Task\Excel Source.Outputs[Excel Source Error Output].Columns[UniqueID ]"
                      name="UniqueID " />
                    <outputColumn
                      refId="Package\Data Flow Task\Excel Source.Outputs[Excel Source Error Output].Columns[ParcelID]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Data Flow Task\Excel Source.Outputs[Excel Source Error Output].Columns[ParcelID]"
                      name="ParcelID" />
                    <outputColumn
                      refId="Package\Data Flow Task\Excel Source.Outputs[Excel Source Error Output].Columns[LandUse]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Data Flow Task\Excel Source.Outputs[Excel Source Error Output].Columns[LandUse]"
                      name="LandUse" />
                    <outputColumn
                      refId="Package\Data Flow Task\Excel Source.Outputs[Excel Source Error Output].Columns[PropertyAddress]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Data Flow Task\Excel Source.Outputs[Excel Source Error Output].Columns[PropertyAddress]"
                      name="PropertyAddress" />
                    <outputColumn
                      refId="Package\Data Flow Task\Excel Source.Outputs[Excel Source Error Output].Columns[SaleDate]"
                      dataType="date"
                      lineageId="Package\Data Flow Task\Excel Source.Outputs[Excel Source Error Output].Columns[SaleDate]"
                      name="SaleDate" />
                    <outputColumn
                      refId="Package\Data Flow Task\Excel Source.Outputs[Excel Source Error Output].Columns[SalePrice]"
                      dataType="r8"
                      lineageId="Package\Data Flow Task\Excel Source.Outputs[Excel Source Error Output].Columns[SalePrice]"
                      name="SalePrice" />
                    <outputColumn
                      refId="Package\Data Flow Task\Excel Source.Outputs[Excel Source Error Output].Columns[LegalReference]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Data Flow Task\Excel Source.Outputs[Excel Source Error Output].Columns[LegalReference]"
                      name="LegalReference" />
                    <outputColumn
                      refId="Package\Data Flow Task\Excel Source.Outputs[Excel Source Error Output].Columns[SoldAsVacant]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Data Flow Task\Excel Source.Outputs[Excel Source Error Output].Columns[SoldAsVacant]"
                      name="SoldAsVacant" />
                    <outputColumn
                      refId="Package\Data Flow Task\Excel Source.Outputs[Excel Source Error Output].Columns[OwnerName]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Data Flow Task\Excel Source.Outputs[Excel Source Error Output].Columns[OwnerName]"
                      name="OwnerName" />
                    <outputColumn
                      refId="Package\Data Flow Task\Excel Source.Outputs[Excel Source Error Output].Columns[OwnerAddress]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Data Flow Task\Excel Source.Outputs[Excel Source Error Output].Columns[OwnerAddress]"
                      name="OwnerAddress" />
                    <outputColumn
                      refId="Package\Data Flow Task\Excel Source.Outputs[Excel Source Error Output].Columns[Acreage]"
                      dataType="r8"
                      lineageId="Package\Data Flow Task\Excel Source.Outputs[Excel Source Error Output].Columns[Acreage]"
                      name="Acreage" />
                    <outputColumn
                      refId="Package\Data Flow Task\Excel Source.Outputs[Excel Source Error Output].Columns[TaxDistrict]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Data Flow Task\Excel Source.Outputs[Excel Source Error Output].Columns[TaxDistrict]"
                      name="TaxDistrict" />
                    <outputColumn
                      refId="Package\Data Flow Task\Excel Source.Outputs[Excel Source Error Output].Columns[LandValue]"
                      dataType="r8"
                      lineageId="Package\Data Flow Task\Excel Source.Outputs[Excel Source Error Output].Columns[LandValue]"
                      name="LandValue" />
                    <outputColumn
                      refId="Package\Data Flow Task\Excel Source.Outputs[Excel Source Error Output].Columns[BuildingValue]"
                      dataType="r8"
                      lineageId="Package\Data Flow Task\Excel Source.Outputs[Excel Source Error Output].Columns[BuildingValue]"
                      name="BuildingValue" />
                    <outputColumn
                      refId="Package\Data Flow Task\Excel Source.Outputs[Excel Source Error Output].Columns[TotalValue]"
                      dataType="r8"
                      lineageId="Package\Data Flow Task\Excel Source.Outputs[Excel Source Error Output].Columns[TotalValue]"
                      name="TotalValue" />
                    <outputColumn
                      refId="Package\Data Flow Task\Excel Source.Outputs[Excel Source Error Output].Columns[YearBuilt]"
                      dataType="r8"
                      lineageId="Package\Data Flow Task\Excel Source.Outputs[Excel Source Error Output].Columns[YearBuilt]"
                      name="YearBuilt" />
                    <outputColumn
                      refId="Package\Data Flow Task\Excel Source.Outputs[Excel Source Error Output].Columns[Bedrooms]"
                      dataType="r8"
                      lineageId="Package\Data Flow Task\Excel Source.Outputs[Excel Source Error Output].Columns[Bedrooms]"
                      name="Bedrooms" />
                    <outputColumn
                      refId="Package\Data Flow Task\Excel Source.Outputs[Excel Source Error Output].Columns[FullBath]"
                      dataType="r8"
                      lineageId="Package\Data Flow Task\Excel Source.Outputs[Excel Source Error Output].Columns[FullBath]"
                      name="FullBath" />
                    <outputColumn
                      refId="Package\Data Flow Task\Excel Source.Outputs[Excel Source Error Output].Columns[HalfBath]"
                      dataType="r8"
                      lineageId="Package\Data Flow Task\Excel Source.Outputs[Excel Source Error Output].Columns[HalfBath]"
                      name="HalfBath" />
                    <outputColumn
                      refId="Package\Data Flow Task\Excel Source.Outputs[Excel Source Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Data Flow Task\Excel Source.Outputs[Excel Source Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Data Flow Task\Excel Source.Outputs[Excel Source Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Data Flow Task\Excel Source.Outputs[Excel Source Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Data Flow Task\SplitOwnerAddress"
              componentClassID="Microsoft.ManagedComponentHost"
              contactInfo="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;13"
              description="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum."
              name="SplitOwnerAddress"
              version="13">
              <properties>
                <property
                  dataType="System.String"
                  description="Stores the source code of the component"
                  isArray="true"
                  name="SourceCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="30">
                    <arrayElement
                      dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public override void ProcessInput(int InputID, string InputName, PipelineBuffer Buffer, OutputNameMap OutputMap)
    {

        if (InputName.Equals(@"Input 0", StringComparison.Ordinal))
        {
            Input0_ProcessInput(new Input0Buffer(Buffer, GetColumnIndexes(InputID), OutputMap));
        }

    }

    public virtual void Input0_ProcessInput(Input0Buffer Buffer)
    {
        while (Buffer.NextRow())
        {
            Input0_ProcessInputRow(Buffer);
        }
    }

    public virtual void Input0_ProcessInputRow(Input0Buffer Row)
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[#region Help:  Introduction to the Script Component
/* The Script Component allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services data flow.
 *
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script component. */
#endregion

#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;
#endregion

/// <summary>
/// This is the class to which to add your code.  Do not change the name, attributes, or parent
/// of this class.
/// </summary>
[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{
    #region Help:  Using Integration Services variables and parameters
    /* To use a variable in this script, first ensure that the variable has been added to
     * either the list contained in the ReadOnlyVariables property or the list contained in
     * the ReadWriteVariables property of this script component, according to whether or not your
     * code needs to write into the variable.  To do so, save this script, close this instance of
     * Visual Studio, and update the ReadOnlyVariables and ReadWriteVariables properties in the
     * Script Transformation Editor window.
     * To use a parameter in this script, follow the same steps. Parameters are always read-only.
     *
     * Example of reading from a variable or parameter:
     *  DateTime startTime = Variables.MyStartTime;
     *
     * Example of writing to a variable:
     *  Variables.myStringVariable = "new value";
     */
    #endregion

    #region Help:  Using Integration Services Connnection Managers
    /* Some types of connection managers can be used in this script component.  See the help topic
     * "Working with Connection Managers Programatically" for details.
     *
     * To use a connection manager in this script, first ensure that the connection manager has
     * been added to either the list of connection managers on the Connection Managers page of the
     * script component editor.  To add the connection manager, save this script, close this instance of
     * Visual Studio, and add the Connection Manager to the list.
     *
     * If the component needs to hold a connection open while processing rows, override the
     * AcquireConnections and ReleaseConnections methods.
     * 
     * Example of using an ADO.Net connection manager to acquire a SqlConnection:
     *  object rawConnection = Connections.SalesDB.AcquireConnection(transaction);
     *  SqlConnection salesDBConn = (SqlConnection)rawConnection;
     *
     * Example of using a File connection manager to acquire a file path:
     *  object rawConnection = Connections.Prices_zip.AcquireConnection(transaction);
     *  string filePath = (string)rawConnection;
     *
     * Example of releasing a connection manager:
     *  Connections.SalesDB.ReleaseConnection(rawConnection);
     */
    #endregion

    #region Help:  Firing Integration Services Events
    /* This script component can fire events.
     *
     * Example of firing an error event:
     *  ComponentMetaData.FireError(10, "Process Values", "Bad value", "", 0, out cancel);
     *
     * Example of firing an information event:
     *  ComponentMetaData.FireInformation(10, "Process Values", "Processing has started", "", 0, fireAgain);
     *
     * Example of firing a warning event:
     *  ComponentMetaData.FireWarning(10, "Process Values", "No rows were received", "", 0);
     */
    #endregion

    /// <summary>
    /// This method is called once, before rows begin to be processed in the data flow.
    ///
    /// You can remove this method if you don't need to do anything here.
    /// </summary>
    public override void PreExecute()
    {
        base.PreExecute();
        /*
         * Add your code here
         */
    }

    /// <summary>
    /// This method is called after all the rows have passed through this component.
    ///
    /// You can delete this method if you don't need to do anything here.
    /// </summary>
    public override void PostExecute()
    {
        base.PostExecute();
        /*
         * Add your code here
         */
    }

    /// <summary>
    /// This method is called once for every row that passes through the component from Input0.
    ///
    /// Example of reading a value from a column in the the row:
    ///  string zipCode = Row.ZipCode
    ///
    /// Example of writing a value to a column in the row:
    ///  Row.ZipCode = zipCode
    /// </summary>
    /// <param name="Row">The row that is currently passing through the component</param>
    public override void Input0_ProcessInputRow(Input0Buffer Row)
    {
        /*
         * Add your code here
         */
        if(Row.OwnerAddress != null)
        {
            var Columns = Row.OwnerAddress.Split(',');
            Row.OwnerAddressOut = Columns[0];
            Row.OwnerCityOut = Columns[1];
            Row.OwnerStateOut = Columns[2]; 
        }
        
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class Input0Buffer: ScriptBuffer

{
    public Input0Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public String OwnerAddress
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[0]);
        }
        set
        {
            this[0] = value;
        }
    }
    public bool OwnerAddress_IsNull
    {
        get
        {
            return IsNull(0);
        }
        set
        {
            if (value)
            {
                SetNull(0);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String OwnerAddressOut
    {
        set
        {
            this[1] = value;
        }
    }
    public bool OwnerAddressOut_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(1);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String OwnerCityOut
    {
        set
        {
            this[2] = value;
        }
    }
    public bool OwnerCityOut_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(2);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String OwnerStateOut
    {
        set
        {
            this[3] = value;
        }
    }
    public bool OwnerStateOut_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(3);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public bool NextRow()
    {
        return base.NextRow();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_42bcef5071c6426e8410a10d99aaaae2.csproj]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{a1b8d897-677f-448f-b7e5-90fb96290187}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>SC_42bcef5071c6426e8410a10d99aaaae2</RootNamespace>
    <AssemblyName>SC_42bcef5071c6426e8410a10d99aaaae2</AssemblyName>
    <TargetFrameworkVersion>v4.7</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.TxScript, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.PipelineHost, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Compile Include="main.cs" />
    <Compile Include="BufferWrapper.cs" />
    <Compile Include="ComponentWrapper.cs" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="ScriptComponent" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoExeName="" DebugInfoCommandLine="" DebugInfoWorkingDir="" IconImageList="" />
        <Host Name="ScriptComponent" GeneratedNamespace="SC_42bcef5071c6426e8410a10d99aaaae2" IconIndex="0"></Host>
        <ProjectClient>
          <HostIdentifier>SSIS_SC160</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_42bcef5071c6426e8410a10d99aaaae2.Properties.Settings.get_Default():SC_42bcef5071c6426e8410a10d99aaaae2.Properties.Sett" +
    "ings")]

namespace SC_42bcef5071c6426e8410a10d99aaaae2.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Project]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>SC_42bcef5071c6426e8410a10d99aaaae2</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>SC_42bcef5071c6426e8410a10d99aaaae2</msb:DisplayName>
    <msb:ProjectId>{715E55E4-51EF-4C32-96A9-ABB1A1A815A7}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="SC_42bcef5071c6426e8410a10d99aaaae2.csproj" />
    <msb:File Include="main.cs" />
    <msb:File Include="BufferWrapper.cs" />
    <msb:File Include="ComponentWrapper.cs" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Resources.Designer.cs" />
    <msb:File Include="Properties\Settings.Designer.cs" />
  </msb:ItemGroup>
</c:Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_42bcef5071c6426e8410a10d99aaaae2")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("SC_42bcef5071c6426e8410a10d99aaaae2")]
[assembly: AssemblyCopyright("Copyright @  2025")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.0.0")]
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_42bcef5071c6426e8410a10d99aaaae2.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_42bcef5071c6426e8410a10d99aaaae2.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_42bcef5071c6426e8410a10d99aaaae2.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_42bcef5071c6426e8410a10d99aaaae2.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_42bcef5071c6426e8410a10d99aaaae2.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Stores the binary representation of the component"
                  isArray="true"
                  name="BinaryCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="2">
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_42bcef5071c6426e8410a10d99aaaae2.dll]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAK7Y4WcAAAAAAAAAAOAAIiALATAAABQAAAAIAAAAAAAAmjMA
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAACAAAAAAgAAAAAAAAMAYIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAEgzAABPAAAAAEAAAEgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAoBMAAAAgAAAAFAAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAEgEAAAAQAAAAAYAAAAWAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAHAAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAAB8
MwAAAAAAAEgAAAACAAUARCIAAEwQAAABAAAAAAAAAJAyAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAB4CKBAAAAoqHgIoEQAACioTMAUAOwAAAAEAABEDbwYAAAYs
MgNvBgAABheNGgAAASUWHyydbxIAAAoKAwYWmm8KAAAGAwYXmm8MAAAGAwYYmm8OAAAGKh4CKBIA
AAYqKgIDBAUoEwAACipSAnsUAAAKAnsVAAAKFpRvFgAACiomAhYDKBcAAAoqIgIWKBgAAAoqWgMs
CAIWKBkAAAoqcgEAAHBzGgAACnomAhcDKBcAAAoqWgMsCAIXKBkAAAoqcgEAAHBzGgAACnomAhgD
KBcAAAoqWgMsCAIYKBkAAAoqcgEAAHBzGgAACnomAhkDKBcAAAoqWgMsCAIZKBkAAAoqcgEAAHBz
GgAACnoeAigbAAAKKh4CKBwAAAoqfgIoHQAACgICcxYAAAZ9AQAABAICcxcAAAZ9AgAABCqSBHKe
AABwGm8eAAAKLBUCBQIDKB8AAAoOBHMFAAAGbxQAAAYqSisHAgNvFQAABgNvEAAABi3xKgYqOgIo
IAAACgIDfQMAAAQqOgIoIAAACgIDfQQAAAQqHgIoIAAACiqufgUAAAQtHnKuAABw0AcAAAIoIQAA
Cm8iAAAKcyMAAAqABQAABH4FAAAEKhp+BgAABCoeAoAGAAAEKhp+BwAABCoeAigkAAAKKi5zHQAA
BoAHAAAEKgAAQlNKQgEAAQAAAAAADAAAAHY0LjAuMzAzMTkAAAAABQBsAAAALAYAACN+AACYBgAA
1AYAACNTdHJpbmdzAAAAAGwNAAAgAQAAI1VTAIwOAAAQAAAAI0dVSUQAAACcDgAAsAEAACNCbG9i
AAAAAAAAAAIAAAFXFaIBCQEAAAD6ATMAFgAAAQAAACAAAAAIAAAABwAAAB4AAAAVAAAAJAAAABAA
AAABAAAAAwAAAAsAAAAOAAAAAQAAAAQAAAABAAAAAADtAgEAAAAAAAYA5AGtBAYAeAKtBAYAMAGa
BA8AIQUAAAYAXQHqAwYAxwHqAwYAqAHqAwYAXwLqAwYABALqAwYAHQLqAwYAdAHqAwYAjwGzAgoA
OAJ9AAoAbAR9AA4AXQR9AAoAMwR9AAoADwZ9AAYAzAWiAwYAEwGaBAYAfQTNBAYAJwTVAxIA4wDX
AhIARAHXAhIAywDAAwYA+ACtBAYASwSiAwYA0AKiAwYA/AOiAwYAFgSiAwYAngCiAwYATwCiAwYA
ywbqAwAAAAAlAAAAAAABAAEAAQAQALUDAAAQAAEAAQABABAAUAQAADkAAQAFAAEAEADxBQAARQAB
ABIAAQAQAJ4FAABJAAMAFgABABAAXwUAAEkABAAXAAAAEADUBDAFSQAFABgAAAEQAI4FMAVhAAcA
HAAGAJ4FgQAGAF8FhQABAP8FiQABAP8FiQARAKkDjQARALsAkQARAD8AlQBQIAAAAADGAJYCBgAB
AFggAAAAAMYAoQIGAAEAYCAAAAAAxgCoBpkAAQCnIAAAAACGGI0EBgACAK8gAAAAAIYYjQQnAAIA
uiAAAAAAhgiqBZ8ABQDPIAAAAACGCLsFEAAFANkgAAAAAIYIFQNJAAYA4iAAAAAAhggtA6MABgD5
IAAAAACGCG8GEAAHAAMhAAAAAIYIXgOjAAgAGiEAAAAAhgiDBhAACQAkIQAAAACGCHkDowAKADsh
AAAAAIYIXQYQAAsARSEAAAAAhghFA6MADABcIQAAAACGAL8GSQANAGQhAAAAAIYA0wVJAA0AbCEA
AAAAhhiNBAYADQCMIQAAAADGAJsGqAANALEhAAAAAMYBlAaZABEAxCEAAAAAxgGoBpkAEgDGIQAA
AACGGI0EsgATANUhAAAAAIYYjQSyABQA5CEAAAAAgxiNBAYAFQDsIQAAAACTCHkEuAAVABgiAAAA
AJMIowC9ABUAHyIAAAAAkwivAMIAFQAnIgAAAACWCOUFyAAWAC4iAAAAAIYYjQQGABYANiIAAAAA
kRiTBM0AFgAAAAEAwwYAAAEAcgQAAAIAaQUAAAMAQQQAAAEArQIAAAEArQIAAAEArQIAAAEArQIA
AAEArQIAAAEArQIAAAEArQIAAAEArQIAAAEALgAAAAIAcwAAAAMAcgQAAAQAQQQAAAEAcgQAAAEA
wwYAAAEAFQYAAAEAFQYAAAEArQIJAI0EAQARAI0EBgAZAI0ECgApAI0EEAAxAI0EEAA5AI0EEABB
AI0EEABJAI0EEABRAI0EEABZAI0EEABhAI0EEABpAI0EBgCZAI0EBgC5AI0EFQDJAI0EBgCJAJYC
BgCJAKECBgDZAN8FIABxAI0EJwBxAHIEMQBxAGkFNQB5AM0COQBxAJkDPgBxAIoDRABxAJEDAQDh
AI0EEABxAL8GSQBxANMFSQCJAI0EBgDZAJcFTQCJAH0FVACRAI0EBgDxAGEAWgDxAMcGYQChAI0E
ZwDBAI0EBgAuAAsA6AAuABMA8QAuABsAEAEuACMAGQEuACsAQgEuADMAQgEuADsAQgEuAEMAGQEu
AEsASAEuAFMAQgEuAFsAXwFDAGMAqQHhAHsAqQHjAGsAqQEpAXMAEAFJAXMAEAEbAAMAAQAHAAkA
CAALAAAAvwXRAAAAMQPVAAAAcwbRAAAAYgPVAAAAhwbRAAAAfQPVAAAAYQbRAAAASQPVAAAAfQTZ
AAAAwwDeAAAA6QXjAAIABgADAAEABwADAAIACAAFAAEACQAFAAEACgAHAAEACwAJAAEADAALAAEA
DQANAAEADgAPAAEADwARAAIAGQATAAIAGgAVAAEAGwAVAAIAHAAXAASAAAABAAAAAAAAAAAAAAAA
AAEAAAAEAAAAAAAAAAAAAABvADYAAAAAABAAAAAAAAAAAAAAAHgAHwYAAAAAEAAAAAAAAAAAAAAA
eAA8BgAAAAAEAAAAAAAAAAAAAABvAKIDAAAAAAAAAAABAAAA3gQAAAAAAAAAU0NfNDJiY2VmNTA3
MWM2NDI2ZTg0MTBhMTBkOTlhYWFhZTIAPE1vZHVsZT4ASW5wdXRJRABtc2NvcmxpYgBkZWZhdWx0
SW5zdGFuY2UAUnVudGltZVR5cGVIYW5kbGUAR2V0VHlwZUZyb21IYW5kbGUASW5wdXROYW1lAE1p
Y3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlBpcGVsaW5lAFR5cGUAZ2V0X0N1bHR1cmUAc2V0X0N1bHR1
cmUAcmVzb3VyY2VDdWx0dXJlAEFwcGxpY2F0aW9uU2V0dGluZ3NCYXNlAEVkaXRvckJyb3dzYWJs
ZVN0YXRlAENvbXBpbGVyR2VuZXJhdGVkQXR0cmlidXRlAERlYnVnZ2VyTm9uVXNlckNvZGVBdHRy
aWJ1dGUARGVidWdnYWJsZUF0dHJpYnV0ZQBFZGl0b3JCcm93c2FibGVBdHRyaWJ1dGUAQXNzZW1i
bHlUaXRsZUF0dHJpYnV0ZQBBc3NlbWJseVRyYWRlbWFya0F0dHJpYnV0ZQBUYXJnZXRGcmFtZXdv
cmtBdHRyaWJ1dGUAQXNzZW1ibHlDb25maWd1cmF0aW9uQXR0cmlidXRlAEFzc2VtYmx5RGVzY3Jp
cHRpb25BdHRyaWJ1dGUAQ29tcGlsYXRpb25SZWxheGF0aW9uc0F0dHJpYnV0ZQBBc3NlbWJseVBy
b2R1Y3RBdHRyaWJ1dGUAQXNzZW1ibHlDb3B5cmlnaHRBdHRyaWJ1dGUAU1NJU1NjcmlwdENvbXBv
bmVudEVudHJ5UG9pbnRBdHRyaWJ1dGUAQXNzZW1ibHlDb21wYW55QXR0cmlidXRlAFJ1bnRpbWVD
b21wYXRpYmlsaXR5QXR0cmlidXRlAFByZUV4ZWN1dGUAUG9zdEV4ZWN1dGUAdmFsdWUAU3lzdGVt
LlJ1bnRpbWUuVmVyc2lvbmluZwBHZXRTdHJpbmcAU3lzdGVtLkNvbXBvbmVudE1vZGVsAFNDXzQy
YmNlZjUwNzFjNjQyNmU4NDEwYTEwZDk5YWFhYWUyLmRsbABnZXRfT3duZXJBZGRyZXNzX0lzTnVs
bABzZXRfT3duZXJBZGRyZXNzX0lzTnVsbABzZXRfT3duZXJTdGF0ZU91dF9Jc051bGwAc2V0X093
bmVyQWRkcmVzc091dF9Jc051bGwAc2V0X093bmVyQ2l0eU91dF9Jc051bGwAU2V0TnVsbABzZXRf
SXRlbQBTeXN0ZW0AcmVzb3VyY2VNYW4AU2NyaXB0TWFpbgBTeXN0ZW0uQ29uZmlndXJhdGlvbgBT
eXN0ZW0uR2xvYmFsaXphdGlvbgBTeXN0ZW0uUmVmbGVjdGlvbgBJbnZhbGlkT3BlcmF0aW9uRXhj
ZXB0aW9uAFN0cmluZ0NvbXBhcmlzb24AQ3VsdHVyZUluZm8AT3V0cHV0TmFtZU1hcABPdXRwdXRN
YXAAQ2hhcgBJbnB1dDBCdWZmZXIAUGlwZWxpbmVCdWZmZXIAU2NyaXB0QnVmZmVyAGdldF9SZXNv
dXJjZU1hbmFnZXIALmN0b3IALmNjdG9yAFN5c3RlbS5EaWFnbm9zdGljcwBTeXN0ZW0uUnVudGlt
ZS5Db21waWxlclNlcnZpY2VzAFN5c3RlbS5SZXNvdXJjZXMAU0NfNDJiY2VmNTA3MWM2NDI2ZTg0
MTBhMTBkOTlhYWFhZTIuUHJvcGVydGllcy5SZXNvdXJjZXMucmVzb3VyY2VzAERlYnVnZ2luZ01v
ZGVzAFNDXzQyYmNlZjUwNzFjNjQyNmU4NDEwYTEwZDk5YWFhYWUyLlByb3BlcnRpZXMAVmFyaWFi
bGVzAEJ1ZmZlckNvbHVtbkluZGV4ZXMAR2V0Q29sdW1uSW5kZXhlcwBTZXR0aW5ncwBFcXVhbHMA
Q29ubmVjdGlvbnMAZ2V0X093bmVyQWRkcmVzcwBzZXRfT3duZXJBZGRyZXNzAE9iamVjdABFbmRP
ZlJvd3NldABTcGxpdABnZXRfRGVmYXVsdABVc2VyQ29tcG9uZW50AFBhcmVudENvbXBvbmVudABT
Y3JpcHRDb21wb25lbnQATWljcm9zb2Z0LlNxbFNlcnZlci5UeFNjcmlwdABNaWNyb3NvZnQuU3Fs
U2VydmVyLlBpcGVsaW5lSG9zdABzZXRfT3duZXJTdGF0ZU91dABzZXRfT3duZXJBZGRyZXNzT3V0
AHNldF9Pd25lckNpdHlPdXQASW5wdXQwX1Byb2Nlc3NJbnB1dABJbnB1dDBfUHJvY2Vzc0lucHV0
Um93AE5leHRSb3cAZ2V0X0Fzc2VtYmx5AACAm0kAcwBOAHUAbABsACAAcAByAG8AcABlAHIAdAB5
ACAAYwBhAG4AbgBvAHQAIABiAGUAIABzAGUAdAAgAHQAbwAgAEYAYQBsAHMAZQAuACAAQQBzAHMA
aQBnAG4AIABhACAAdgBhAGwAdQBlACAAdABvACAAdABoAGUAIABjAG8AbAB1AG0AbgAgAGkAbgBz
AHQAZQBhAGQALgAAD0kAbgBwAHUAdAAgADAAAHFTAEMAXwA0ADIAYgBjAGUAZgA1ADAANwAxAGMA
NgA0ADIANgBlADgANAAxADAAYQAxADAAZAA5ADkAYQBhAGEAYQBlADIALgBQAHIAbwBwAGUAcgB0
AGkAZQBzAC4AUgBlAHMAbwB1AHIAYwBlAHMAAECG3VnRbPRAktp8ZtMi9eMABCABAQgDIAABBSAB
ARERBCABAQ4FIAEBEVkEBwEdDgYgAR0OHQMJIAMBEj0dCBJBAwYSPQMGHQgEIAEOCAUgAgEIHAQg
AQIIAyAAAgYgAgIOEXUFIAEdCAgGAAESeRF9BSAAEoCBByACAQ4SgIEIt3pcVhk04IkIiYRdzYCA
zJEDBhIUAwYSGAMGEkUDBhJRAwYSVQMGEiAFIAEBEgwDIAAOBCABAQIJIAQBCA4SPRJBBSABARJF
BAAAElEEAAASVQUAAQESVQQAABIgAwAAAQMoAA4DKAACBAgAElEECAASVQQIABIgCAEACAAAAAAA
HgEAAQBUAhZXcmFwTm9uRXhjZXB0aW9uVGhyb3dzAQgBAAIAAAAAACgBACNTQ180MmJjZWY1MDcx
YzY0MjZlODQxMGExMGQ5OWFhYWFlMgAABQEAAAAAFgEAEUNvcHlyaWdodCBAICAyMDI1AABJAQAa
Lk5FVEZyYW1ld29yayxWZXJzaW9uPXY0LjcBAFQOFEZyYW1ld29ya0Rpc3BsYXlOYW1lEi5ORVQg
RnJhbWV3b3JrIDQuNwQBAAAAAAC0AAAAzsrvvgEAAACRAAAAbFN5c3RlbS5SZXNvdXJjZXMuUmVz
b3VyY2VSZWFkZXIsIG1zY29ybGliLCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwg
UHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OSNTeXN0ZW0uUmVzb3VyY2VzLlJ1bnRpbWVS
ZXNvdXJjZVNldAIAAAAAAAAAAAAAAFBBRFBBRFC0AAAAcDMAAAAAAAAAAAAAijMAAAAgAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAHwzAAAAAAAAAAAAAAAAX0NvckRsbE1haW4AbXNjb3JlZS5kbGwAAAAA
AP8lACAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAQAQAAAAGAAAgAAAAAAAAAAAAAAAAAAAAQABAAAAMAAAgAAAAAAAAAAAAAAAAAAAAQAAAAAA
SAAAAFhAAADsAwAAAAAAAAAAAADsAzQAAABWAFMAXwBWAEUAUgBTAEkATwBOAF8ASQBOAEYATwAA
AAAAvQTv/gAAAQAAAAEAAAAAAAAAAQAAAAAAPwAAAAAAAAAEAAAAAgAAAAAAAAAAAAAAAAAAAEQA
AAABAFYAYQByAEYAaQBsAGUASQBuAGYAbwAAAAAAJAAEAAAAVAByAGEAbgBzAGwAYQB0AGkAbwBu
AAAAAAAAALAETAMAAAEAUwB0AHIAaQBuAGcARgBpAGwAZQBJAG4AZgBvAAAAKAMAAAEAMAAwADAA
MAAwADQAYgAwAAAAGgABAAEAQwBvAG0AbQBlAG4AdABzAAAAAAAAACIAAQABAEMAbwBtAHAAYQBu
AHkATgBhAG0AZQAAAAAAAAAAAHAAJAABAEYAaQBsAGUARABlAHMAYwByAGkAcAB0AGkAbwBuAAAA
AABTAEMAXwA0ADIAYgBjAGUAZgA1ADAANwAxAGMANgA0ADIANgBlADgANAAxADAAYQAxADAAZAA5
ADkAYQBhAGEAYQBlADIAAAAwAAgAAQBGAGkAbABlAFYAZQByAHMAaQBvAG4AAAAAADEALgAwAC4A
MAAuADAAAABwACgAAQBJAG4AdABlAHIAbgBhAGwATgBhAG0AZQAAAFMAQwBfADQAMgBiAGMAZQBm
ADUAMAA3ADEAYwA2ADQAMgA2AGUAOAA0ADEAMABhADEAMABkADkAOQBhAGEAYQBhAGUAMgAuAGQA
bABsAAAASAASAAEATABlAGcAYQBsAEMAbwBwAHkAcgBpAGcAaAB0AAAAQwBvAHAAeQByAGkAZwBo
AHQAIABAACAAIAAyADAAMgA1AAAAKgABAAEATABlAGcAYQBsAFQAcgBhAGQAZQBtAGEAcgBrAHMA
AAAAAAAAAAB4ACgAAQBPAHIAaQBnAGkAbgBhAGwARgBpAGwAZQBuAGEAbQBlAAAAUwBDAF8ANAAy
AGIAYwBlAGYANQAwADcAMQBjADYANAAyADYAZQA4ADQAMQAwAGEAMQAwAGQAOQA5AGEAYQBhAGEA
ZQAyAC4AZABsAGwAAABoACQAAQBQAHIAbwBkAHUAYwB0AE4AYQBtAGUAAAAAAFMAQwBfADQAMgBi
AGMAZQBmADUAMAA3ADEAYwA2ADQAMgA2AGUAOAA0ADEAMABhADEAMABkADkAOQBhAGEAYQBhAGUA
MgAAADQACAABAFAAcgBvAGQAdQBjAHQAVgBlAHIAcwBpAG8AbgAAADEALgAwAC4AMAAuADAAAAA4
AAgAAQBBAHMAcwBlAG0AYgBsAHkAIABWAGUAcgBzAGkAbwBuAAAAMQAuADAALgAwAC4AMAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwAAAMAAAAnDMAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                  name="VSTAProjectName"
                  typeConverter="NOTBROWSABLE">SC_42bcef5071c6426e8410a10d99aaaae2</property>
                <property
                  dataType="System.String"
                  description="Specifies the programming language used by the script."
                  name="ScriptLanguage"
                  typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages">CSharp</property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read-only variables."
                  name="ReadOnlyVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg"></property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read/write variables."
                  name="ReadWriteVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg"></property>
                <property
                  dataType="System.String"
                  description="List of breakpoints present on the script."
                  isArray="true"
                  name="BreakpointCollection"
                  typeConverter="NOTBROWSABLE">
                  <arrayElements
                    arrayElementCount="0" />
                </property>
                <property
                  dataType="System.String"
                  description="Checksum to match component metedata against compiled codes."
                  name="MetadataChecksum140"
                  typeConverter="NOTBROWSABLE">9D</property>
                <property
                  dataType="System.String"
                  name="UserComponentTypeName">Microsoft.ScriptComponentHost</property>
              </properties>
              <inputs>
                <input
                  refId="Package\Data Flow Task\SplitOwnerAddress.Inputs[Input 0]"
                  hasSideEffects="true"
                  name="Input 0">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Data Flow Task\SplitOwnerAddress.Inputs[Input 0].Columns[OwnerAddress]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="OwnerAddress"
                      lineageId="Package\Data Flow Task\Excel Source.Outputs[Excel Source Output].Columns[OwnerAddress]"
                      usageType="readWrite" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Data Flow Task\SplitOwnerAddress.Outputs[Output 0]"
                  name="Output 0"
                  synchronousInputId="Package\Data Flow Task\SplitOwnerAddress.Inputs[Input 0]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Data Flow Task\SplitOwnerAddress.Outputs[Output 0].Columns[Owner_Address_Out]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Data Flow Task\SplitOwnerAddress.Outputs[Output 0].Columns[Owner_Address_Out]"
                      name="Owner_Address_Out" />
                    <outputColumn
                      refId="Package\Data Flow Task\SplitOwnerAddress.Outputs[Output 0].Columns[Owner_City_Out]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Data Flow Task\SplitOwnerAddress.Outputs[Output 0].Columns[Owner_City_Out]"
                      name="Owner_City_Out" />
                    <outputColumn
                      refId="Package\Data Flow Task\SplitOwnerAddress.Outputs[Output 0].Columns[Owner_State_Out]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Data Flow Task\SplitOwnerAddress.Outputs[Output 0].Columns[Owner_State_Out]"
                      name="Owner_State_Out" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Data Flow Task\SplitPropertyAddress"
              componentClassID="Microsoft.ManagedComponentHost"
              contactInfo="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;13"
              description="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum."
              name="SplitPropertyAddress"
              version="13">
              <properties>
                <property
                  dataType="System.String"
                  description="Stores the source code of the component"
                  isArray="true"
                  name="SourceCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="30">
                    <arrayElement
                      dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public override void ProcessInput(int InputID, string InputName, PipelineBuffer Buffer, OutputNameMap OutputMap)
    {

        if (InputName.Equals(@"Input 0", StringComparison.Ordinal))
        {
            Input0_ProcessInput(new Input0Buffer(Buffer, GetColumnIndexes(InputID), OutputMap));
        }

    }

    public virtual void Input0_ProcessInput(Input0Buffer Buffer)
    {
        while (Buffer.NextRow())
        {
            Input0_ProcessInputRow(Buffer);
        }
    }

    public virtual void Input0_ProcessInputRow(Input0Buffer Row)
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

    public IDTSConnectionManager100 Connection
    {
        get
        {
            return ParentComponent.ComponentMetaData.RuntimeConnectionCollection.GetRuntimeConnectionByName(@"Connection").ConnectionManager;
        }
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[#region Help:  Introduction to the Script Component
/* The Script Component allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services data flow.
 *
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script component. */
#endregion

#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;
#endregion

/// <summary>
/// This is the class to which to add your code.  Do not change the name, attributes, or parent
/// of this class.
/// </summary>
[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{
    #region Help:  Using Integration Services variables and parameters
    /* To use a variable in this script, first ensure that the variable has been added to
     * either the list contained in the ReadOnlyVariables property or the list contained in
     * the ReadWriteVariables property of this script component, according to whether or not your
     * code needs to write into the variable.  To do so, save this script, close this instance of
     * Visual Studio, and update the ReadOnlyVariables and ReadWriteVariables properties in the
     * Script Transformation Editor window.
     * To use a parameter in this script, follow the same steps. Parameters are always read-only.
     *
     * Example of reading from a variable or parameter:
     *  DateTime startTime = Variables.MyStartTime;
     *
     * Example of writing to a variable:
     *  Variables.myStringVariable = "new value";
     */
    #endregion

    #region Help:  Using Integration Services Connnection Managers
    /* Some types of connection managers can be used in this script component.  See the help topic
     * "Working with Connection Managers Programatically" for details.
     *
     * To use a connection manager in this script, first ensure that the connection manager has
     * been added to either the list of connection managers on the Connection Managers page of the
     * script component editor.  To add the connection manager, save this script, close this instance of
     * Visual Studio, and add the Connection Manager to the list.
     *
     * If the component needs to hold a connection open while processing rows, override the
     * AcquireConnections and ReleaseConnections methods.
     * 
     * Example of using an ADO.Net connection manager to acquire a SqlConnection:
     *  object rawConnection = Connections.SalesDB.AcquireConnection(transaction);
     *  SqlConnection salesDBConn = (SqlConnection)rawConnection;
     *
     * Example of using a File connection manager to acquire a file path:
     *  object rawConnection = Connections.Prices_zip.AcquireConnection(transaction);
     *  string filePath = (string)rawConnection;
     *
     * Example of releasing a connection manager:
     *  Connections.SalesDB.ReleaseConnection(rawConnection);
     */
    #endregion

    #region Help:  Firing Integration Services Events
    /* This script component can fire events.
     *
     * Example of firing an error event:
     *  ComponentMetaData.FireError(10, "Process Values", "Bad value", "", 0, out cancel);
     *
     * Example of firing an information event:
     *  ComponentMetaData.FireInformation(10, "Process Values", "Processing has started", "", 0, fireAgain);
     *
     * Example of firing a warning event:
     *  ComponentMetaData.FireWarning(10, "Process Values", "No rows were received", "", 0);
     */
    #endregion

    /// <summary>
    /// This method is called once, before rows begin to be processed in the data flow.
    ///
    /// You can remove this method if you don't need to do anything here.
    /// </summary>
    public override void PreExecute()
    {
        base.PreExecute();
        /*
         * Add your code here
         */
    }

    /// <summary>
    /// This method is called after all the rows have passed through this component.
    ///
    /// You can delete this method if you don't need to do anything here.
    /// </summary>
    public override void PostExecute()
    {
        base.PostExecute();
        /*
         * Add your code here
         */
    }

    /// <summary>
    /// This method is called once for every row that passes through the component from Input0.
    ///
    /// Example of reading a value from a column in the the row:
    ///  string zipCode = Row.ZipCode
    ///
    /// Example of writing a value to a column in the row:
    ///  Row.ZipCode = zipCode
    /// </summary>
    /// <param name="Row">The row that is currently passing through the component</param>
    public override void Input0_ProcessInputRow(Input0Buffer Row)
    {
        /*
         * Add your code here
         */
        if(Row.PropertyAddress != null) { 
            var Columns = Row.PropertyAddress.Split(',');
            Row.PropertyAddressOut = Columns[0];
            Row.PropertyCityOut = Columns[1];
        }
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class Input0Buffer: ScriptBuffer

{
    public Input0Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public String PropertyAddress
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[0]);
        }
    }
    public bool PropertyAddress_IsNull
    {
        get
        {
            return IsNull(0);
        }
    }

    public String PropertyAddressOut
    {
        set
        {
            this[1] = value;
        }
    }
    public bool PropertyAddressOut_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(1);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String PropertyCityOut
    {
        set
        {
            this[2] = value;
        }
    }
    public bool PropertyCityOut_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(2);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public bool NextRow()
    {
        return base.NextRow();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_54a086ccdca44f1c9a73e05a7a586ad4.Properties.Settings.get_Default():SC_54a086ccdca44f1c9a73e05a7a586ad4.Properties.Sett" +
    "ings")]

namespace SC_54a086ccdca44f1c9a73e05a7a586ad4.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_54a086ccdca44f1c9a73e05a7a586ad4.csproj]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{EB3F91C6-BD27-4DF3-AABE-459F3B7DF411}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>SC_54a086ccdca44f1c9a73e05a7a586ad4</RootNamespace>
    <AssemblyName>SC_54a086ccdca44f1c9a73e05a7a586ad4</AssemblyName>
    <TargetFrameworkVersion>v4.7</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile>
    </TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.TxScript, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.PipelineHost, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Compile Include="main.cs" />
    <Compile Include="BufferWrapper.cs" />
    <Compile Include="ComponentWrapper.cs" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptComponent" IconIndex="0" />
        <ProjectClient>
          <HostIdentifier>SSIS_SC160</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Project]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>SC_54a086ccdca44f1c9a73e05a7a586ad4</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>SC_54a086ccdca44f1c9a73e05a7a586ad4</msb:DisplayName>
    <msb:ProjectId>{59CF8117-A614-4008-81A4-96A5B55FB9AD}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="SC_54a086ccdca44f1c9a73e05a7a586ad4.csproj" />
    <msb:File Include="main.cs" />
    <msb:File Include="BufferWrapper.cs" />
    <msb:File Include="ComponentWrapper.cs" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Resources.Designer.cs" />
    <msb:File Include="Properties\Settings.Designer.cs" />
  </msb:ItemGroup>
</c:Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_54a086ccdca44f1c9a73e05a7a586ad4")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("SC_54a086ccdca44f1c9a73e05a7a586ad4")]
[assembly: AssemblyCopyright("Copyright @  2025")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.0.0")]
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_54a086ccdca44f1c9a73e05a7a586ad4.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_54a086ccdca44f1c9a73e05a7a586ad4.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_54a086ccdca44f1c9a73e05a7a586ad4.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_54a086ccdca44f1c9a73e05a7a586ad4.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_54a086ccdca44f1c9a73e05a7a586ad4.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Stores the binary representation of the component"
                  isArray="true"
                  name="BinaryCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="2">
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_54a086ccdca44f1c9a73e05a7a586ad4.dll]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAEzY4WcAAAAAAAAAAOAAIiALATAAABYAAAAIAAAAAAAA3jQA
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAACAAAAAAgAAAAAAAAMAYIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAIw0AABPAAAAAEAAAEgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAA5BQAAAAgAAAAFgAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAEgEAAAAQAAAAAYAAAAYAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAHgAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAADA
NAAAAAAAAEgAAAACAAUAGCIAALwRAAABAAAAAAAAANQzAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAB4CKBAAAAoqHgIoEQAACioTMAUAMgAAAAEAABEDbwYAAAYs
KQNvBgAABheNGwAAASUWHyydbxIAAAoKAwYWmm8IAAAGAwYXmm8KAAAGKh4CKA4AAAYqKgIDBAUo
EwAACipSAnsUAAAKAnsVAAAKFpRvFgAACioiAhYoFwAACiomAhcDKBgAAAoqWgMsCAIXKBkAAAoq
cgEAAHBzGgAACnomAhgDKBgAAAoqWgMsCAIYKBkAAAoqcgEAAHBzGgAACnoeAigbAAAKKh4CKBwA
AAoqfgIoHQAACgICcxIAAAZ9AQAABAICcxQAAAZ9AgAABCqSBHKeAABwGm8eAAAKLBUCBQIDKB8A
AAoOBHMFAAAGbxAAAAYqSisHAgNvEQAABgNvDAAABi3xKgYqOgIoIAAACgIDfQMAAAQqggJ7AwAA
BG8hAAAKbyIAAApyrgAAcG8jAAAKbyQAAAoqOgIoIAAACgIDfQQAAAQqHgIoIAAACiqufgUAAAQt
HnLEAABw0AcAAAIoJQAACm8mAAAKcycAAAqABQAABH4FAAAEKhp+BgAABCoeAoAGAAAEKhp+BwAA
BCoeAigoAAAKKi5zGgAABoAHAAAEKkJTSkIBAAEAAAAAAAwAAAB2NC4wLjMwMzE5AAAAAAUAbAAA
ACwGAAAjfgAAmAYAABAIAAAjU3RyaW5ncwAAAACoDgAAOAEAACNVUwDgDwAAEAAAACNHVUlEAAAA
8A8AAMwBAAAjQmxvYgAAAAAAAAACAAABVxWiAQkBAAAA+gEzABYAAAEAAAAkAAAACAAAAAcAAAAb
AAAAEQAAACgAAAAQAAAAAQAAAAQAAAAKAAAACwAAAAEAAAAGAAAAAQAAAAAAjAMBAAAAAAAGAIMC
AQYGABcDAQYGAM8B7gUPAHUGAAAGAPwBYQQGAGYCYQQGAEcCYQQGAP4CYQQGAKMCYQQGALwCYQQG
ABMCYQQGAC4CUgMKANcCHAEKAFkFHAEOAEoFHAEKANkEHAEKAFUHHAEGABIHGQQSAFYAkAUGALIB
7gUGAGoFIQYGAM0ETAQWAIIBdgMWAOMBdgMWAGoBNwQGAJcBAQYGADgFGQQGAG8DGQQGAKIEGQQG
ALwEGQQaAAEAuAUaABoAuAUaAD0AuAUGAD0BGQQGANMAGQQGAAUIYQQAAAAAkwAAAAAAAQABAAEA
EAAsBAAAEAABAAEAAQAQAD0FAAA5AAEABQABABAANwcAAEUAAQAOAAEAEADyBgAASQADABIAAQAQ
ALMGAABJAAQAFAAAABAAKAaEBkkABQAVAAABEADiBoQGZQAHABkABgDyBpoABgCzBp4AAQBFB6IA
AQBFB6IAEQAgBKYAEQBaAaoAEQDDAK4AUCAAAAAAxgA1AwYAAQBYIAAAAADGAEADBgABAGAgAAAA
AMYA4geyAAEAniAAAAAAhhjhBQYAAgCmIAAAAACGGOEFJwACALEgAAAAAIYI/ga4AAUAxiAAAAAA
hgi0A0kABQDPIAAAAACGCKMHEAAFANkgAAAAAIYIzwO8AAYA8CAAAAAAhgi6BxAABwD6IAAAAACG
CO0DvAAIABEhAAAAAIYA+QdJAAkAGSEAAAAAhgAZB0kACQAhIQAAAACGGOEFBgAJAEEhAAAAAMYA
1QfBAAkAZiEAAAAAxgHOB7IADQB5IQAAAADGAeIHsgAOAHshAAAAAIYY4QXLAA8AiiEAAAAAhgiT
BGwAEACrIQAAAACGGOEFywAQALohAAAAAIMY4QUGABEAwiEAAAAAkwhmBdEAEQDuIQAAAACTCEIB
1gARAPUhAAAAAJMITgHbABEA/SEAAAAAlggrB+EAEgAEIgAAAACGGOEFBgASAAwiAAAAAJEY5wXm
ABIAAAABAP0HAAABAF8FAAACAL0GAAADAOcEAAABAEwDAAABAEwDAAABAEwDAAABAEwDAAABAJwA
AAACAPcAAAADAF8FAAAEAOcEAAABAF8FAAABAP0HAAABAFsHAAABAFsHAAABAEwDCQDhBQEAEQDh
BQYAGQDhBQoAKQDhBRAAMQDhBRAAOQDhBRAAQQDhBRAASQDhBRAAUQDhBRAAWQDhBRAAYQDhBRAA
aQDhBQYAoQDhBQYAwQDhBRUA0QDhBQYAiQA1AwYAiQBAAwYA4QAlByAAcQDhBScAcQBfBTEAcQC9
BjUAeQBsAzkAcQABBD4AcQAQBEMAcQAIBAEA6QDhBRAAcQD5B0kAcQAZB0kAiQDhBQYA4QDrBk0A
iQDRBlQAkQDhBQYAiQCkAFoA+QBzBF8AAQEBAWUACQF6BWwAEQHlAHEAEQEBCHoAqQDhBYAAyQDh
BQYALgALAAYBLgATAA8BLgAbAC4BLgAjADcBLgArAGABLgAzAGABLgA7AGABLgBDADcBLgBLAGYB
LgBTAGABLgBbAH0BQwBjAMcB4QB7AMcB4wBrAMcBCQFzAC4BKQFzAC4BGwADAAEABQAHAAcACAAI
AAoAAAACB+oAAAC4A+4AAACnB+oAAADTA+4AAAC+B+oAAADxA+4AAACXBPIAAABqBfcAAABiAfwA
AAAvBwEBAgAGAAMAAgAHAAUAAQAIAAcAAQAJAAkAAQAKAAsAAQALAA0AAgATAA8AAgAWABEAAgAX
ABMAAQAYABMAAgAZABUABIAAAAEAAAAAAAAAAAAAAAAAbwAAAAQAAAAAAAAAAAAAAIgAugAAAAAA
EAAAAAAAAAAAAAAAkQBlBwAAAAAQAAAAAAAAAAAAAACRAIIHAAAAABAAAAAAAAAAAAAAAJEA8QQA
AAAABAAAAAAAAAAAAAAAiAAZBAAAAAAQAAAAAAAAAAAAAACRABQFAAAAAAAAAAABAAAAMgYAAAAA
AElEVFNDb21wb25lbnRNZXRhRGF0YTEwMABJRFRTUnVudGltZUNvbm5lY3Rpb25Db2xsZWN0aW9u
MTAwAElEVFNSdW50aW1lQ29ubmVjdGlvbjEwMABJRFRTQ29ubmVjdGlvbk1hbmFnZXIxMDAAU0Nf
NTRhMDg2Y2NkY2E0NGYxYzlhNzNlMDVhN2E1ODZhZDQAPE1vZHVsZT4ASW5wdXRJRABnZXRfQ29t
cG9uZW50TWV0YURhdGEAbXNjb3JsaWIAZGVmYXVsdEluc3RhbmNlAFJ1bnRpbWVUeXBlSGFuZGxl
AEdldFR5cGVGcm9tSGFuZGxlAElucHV0TmFtZQBHZXRSdW50aW1lQ29ubmVjdGlvbkJ5TmFtZQBN
aWNyb3NvZnQuU3FsU2VydmVyLkR0cy5QaXBlbGluZQBUeXBlAGdldF9DdWx0dXJlAHNldF9DdWx0
dXJlAHJlc291cmNlQ3VsdHVyZQBBcHBsaWNhdGlvblNldHRpbmdzQmFzZQBFZGl0b3JCcm93c2Fi
bGVTdGF0ZQBDb21waWxlckdlbmVyYXRlZEF0dHJpYnV0ZQBEZWJ1Z2dlck5vblVzZXJDb2RlQXR0
cmlidXRlAERlYnVnZ2FibGVBdHRyaWJ1dGUARWRpdG9yQnJvd3NhYmxlQXR0cmlidXRlAEFzc2Vt
Ymx5VGl0bGVBdHRyaWJ1dGUAQXNzZW1ibHlUcmFkZW1hcmtBdHRyaWJ1dGUAVGFyZ2V0RnJhbWV3
b3JrQXR0cmlidXRlAEFzc2VtYmx5Q29uZmlndXJhdGlvbkF0dHJpYnV0ZQBBc3NlbWJseURlc2Ny
aXB0aW9uQXR0cmlidXRlAENvbXBpbGF0aW9uUmVsYXhhdGlvbnNBdHRyaWJ1dGUAQXNzZW1ibHlQ
cm9kdWN0QXR0cmlidXRlAEFzc2VtYmx5Q29weXJpZ2h0QXR0cmlidXRlAFNTSVNTY3JpcHRDb21w
b25lbnRFbnRyeVBvaW50QXR0cmlidXRlAEFzc2VtYmx5Q29tcGFueUF0dHJpYnV0ZQBSdW50aW1l
Q29tcGF0aWJpbGl0eUF0dHJpYnV0ZQBQcmVFeGVjdXRlAFBvc3RFeGVjdXRlAHZhbHVlAFN5c3Rl
bS5SdW50aW1lLlZlcnNpb25pbmcAR2V0U3RyaW5nAFN5c3RlbS5Db21wb25lbnRNb2RlbABTQ181
NGEwODZjY2RjYTQ0ZjFjOWE3M2UwNWE3YTU4NmFkNC5kbGwAZ2V0X1Byb3BlcnR5QWRkcmVzc19J
c051bGwAc2V0X1Byb3BlcnR5QWRkcmVzc091dF9Jc051bGwAc2V0X1Byb3BlcnR5Q2l0eU91dF9J
c051bGwAU2V0TnVsbABzZXRfSXRlbQBTeXN0ZW0AcmVzb3VyY2VNYW4AU2NyaXB0TWFpbgBTeXN0
ZW0uQ29uZmlndXJhdGlvbgBTeXN0ZW0uR2xvYmFsaXphdGlvbgBTeXN0ZW0uUmVmbGVjdGlvbgBn
ZXRfUnVudGltZUNvbm5lY3Rpb25Db2xsZWN0aW9uAGdldF9Db25uZWN0aW9uAEludmFsaWRPcGVy
YXRpb25FeGNlcHRpb24AU3RyaW5nQ29tcGFyaXNvbgBDdWx0dXJlSW5mbwBPdXRwdXROYW1lTWFw
AE91dHB1dE1hcABNaWNyb3NvZnQuU3FsU2VydmVyLkRUU1J1bnRpbWVXcmFwAE1pY3Jvc29mdC5T
cWxTZXJ2ZXIuRFRTUGlwZWxpbmVXcmFwAENoYXIASW5wdXQwQnVmZmVyAFBpcGVsaW5lQnVmZmVy
AFNjcmlwdEJ1ZmZlcgBnZXRfUmVzb3VyY2VNYW5hZ2VyAGdldF9Db25uZWN0aW9uTWFuYWdlcgBN
aWNyb3NvZnQuU3FsU2VydmVyLkR0cy5SdW50aW1lLldyYXBwZXIATWljcm9zb2Z0LlNxbFNlcnZl
ci5EdHMuUGlwZWxpbmUuV3JhcHBlcgAuY3RvcgAuY2N0b3IAU3lzdGVtLkRpYWdub3N0aWNzAFN5
c3RlbS5SdW50aW1lLkNvbXBpbGVyU2VydmljZXMAU3lzdGVtLlJlc291cmNlcwBTQ181NGEwODZj
Y2RjYTQ0ZjFjOWE3M2UwNWE3YTU4NmFkNC5Qcm9wZXJ0aWVzLlJlc291cmNlcy5yZXNvdXJjZXMA
RGVidWdnaW5nTW9kZXMAU0NfNTRhMDg2Y2NkY2E0NGYxYzlhNzNlMDVhN2E1ODZhZDQuUHJvcGVy
dGllcwBWYXJpYWJsZXMAQnVmZmVyQ29sdW1uSW5kZXhlcwBHZXRDb2x1bW5JbmRleGVzAFNldHRp
bmdzAEVxdWFscwBDb25uZWN0aW9ucwBnZXRfUHJvcGVydHlBZGRyZXNzAE9iamVjdABFbmRPZlJv
d3NldABTcGxpdABnZXRfRGVmYXVsdABVc2VyQ29tcG9uZW50AFBhcmVudENvbXBvbmVudABTY3Jp
cHRDb21wb25lbnQATWljcm9zb2Z0LlNxbFNlcnZlci5UeFNjcmlwdABNaWNyb3NvZnQuU3FsU2Vy
dmVyLlBpcGVsaW5lSG9zdABzZXRfUHJvcGVydHlBZGRyZXNzT3V0AHNldF9Qcm9wZXJ0eUNpdHlP
dXQASW5wdXQwX1Byb2Nlc3NJbnB1dABJbnB1dDBfUHJvY2Vzc0lucHV0Um93AE5leHRSb3cAZ2V0
X0Fzc2VtYmx5AAAAAICbSQBzAE4AdQBsAGwAIABwAHIAbwBwAGUAcgB0AHkAIABjAGEAbgBuAG8A
dAAgAGIAZQAgAHMAZQB0ACAAdABvACAARgBhAGwAcwBlAC4AIABBAHMAcwBpAGcAbgAgAGEAIAB2
AGEAbAB1AGUAIAB0AG8AIAB0AGgAZQAgAGMAbwBsAHUAbQBuACAAaQBuAHMAdABlAGEAZAAuAAAP
SQBuAHAAdQB0ACAAMAAAFUMAbwBuAG4AZQBjAHQAaQBvAG4AAHFTAEMAXwA1ADQAYQAwADgANgBj
AGMAZABjAGEANAA0AGYAMQBjADkAYQA3ADMAZQAwADUAYQA3AGEANQA4ADYAYQBkADQALgBQAHIA
bwBwAGUAcgB0AGkAZQBzAC4AUgBlAHMAbwB1AHIAYwBlAHMAAAAABdMhPUSH0keSsQ4VzQwxUgAE
IAEBCAMgAAEFIAEBEREEIAEBDgUgAQERXQQHAR0OBiABHQ4dAwkgAwESPR0IEkEDBhI9AwYdCAQg
AQ4IBCABAggFIAIBCBwDIAACBiACAg4ReQUgAR0ICAQgABJ9BSAAEoCBBiABEoCFDgQgABJNCAAB
EoCJEYCNBSAAEoCRByACAQ4SgJEIt3pcVhk04IkIiYRdzYCAzJEDBhIUAwYSGAMGEkUDBhJVAwYS
WQMGEiAFIAEBEgwDIAAOBCABAQIJIAQBCA4SPRJBBSABARJFBAAAElUEAAASWQUAAQESWQQAABIg
AwAAAQMoAA4DKAACBCgAEk0ECAASVQQIABJZBAgAEiAIAQAIAAAAAAAeAQABAFQCFldyYXBOb25F
eGNlcHRpb25UaHJvd3MBCAEAAgAAAAAAKAEAI1NDXzU0YTA4NmNjZGNhNDRmMWM5YTczZTA1YTdh
NTg2YWQ0AAAFAQAAAAAWAQARQ29weXJpZ2h0IEAgIDIwMjUAAEkBABouTkVURnJhbWV3b3JrLFZl
cnNpb249djQuNwEAVA4URnJhbWV3b3JrRGlzcGxheU5hbWUSLk5FVCBGcmFtZXdvcmsgNC43BAEA
AAC0AAAAzsrvvgEAAACRAAAAbFN5c3RlbS5SZXNvdXJjZXMuUmVzb3VyY2VSZWFkZXIsIG1zY29y
bGliLCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3
YTVjNTYxOTM0ZTA4OSNTeXN0ZW0uUmVzb3VyY2VzLlJ1bnRpbWVSZXNvdXJjZVNldAIAAAAAAAAA
AAAAAFBBRFBBRFC0AAAAtDQAAAAAAAAAAAAAzjQAAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMA0
AAAAAAAAAAAAAAAAX0NvckRsbE1haW4AbXNjb3JlZS5kbGwAAAAAAP8lACAAEAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAABABAAAAAYAACAAAAAAAAAAAAAAAAAAAABAAEAAAAwAACAAAAAAAAAAAAAAAAAAAABAAAAAABI
AAAAWEAAAOwDAAAAAAAAAAAAAOwDNAAAAFYAUwBfAFYARQBSAFMASQBPAE4AXwBJAE4ARgBPAAAA
AAC9BO/+AAABAAAAAQAAAAAAAAABAAAAAAA/AAAAAAAAAAQAAAACAAAAAAAAAAAAAAAAAAAARAAA
AAEAVgBhAHIARgBpAGwAZQBJAG4AZgBvAAAAAAAkAAQAAABUAHIAYQBuAHMAbABhAHQAaQBvAG4A
AAAAAAAAsARMAwAAAQBTAHQAcgBpAG4AZwBGAGkAbABlAEkAbgBmAG8AAAAoAwAAAQAwADAAMAAw
ADAANABiADAAAAAaAAEAAQBDAG8AbQBtAGUAbgB0AHMAAAAAAAAAIgABAAEAQwBvAG0AcABhAG4A
eQBOAGEAbQBlAAAAAAAAAAAAcAAkAAEARgBpAGwAZQBEAGUAcwBjAHIAaQBwAHQAaQBvAG4AAAAA
AFMAQwBfADUANABhADAAOAA2AGMAYwBkAGMAYQA0ADQAZgAxAGMAOQBhADcAMwBlADAANQBhADcA
YQA1ADgANgBhAGQANAAAADAACAABAEYAaQBsAGUAVgBlAHIAcwBpAG8AbgAAAAAAMQAuADAALgAw
AC4AMAAAAHAAKAABAEkAbgB0AGUAcgBuAGEAbABOAGEAbQBlAAAAUwBDAF8ANQA0AGEAMAA4ADYA
YwBjAGQAYwBhADQANABmADEAYwA5AGEANwAzAGUAMAA1AGEANwBhADUAOAA2AGEAZAA0AC4AZABs
AGwAAABIABIAAQBMAGUAZwBhAGwAQwBvAHAAeQByAGkAZwBoAHQAAABDAG8AcAB5AHIAaQBnAGgA
dAAgAEAAIAAgADIAMAAyADUAAAAqAAEAAQBMAGUAZwBhAGwAVAByAGEAZABlAG0AYQByAGsAcwAA
AAAAAAAAAHgAKAABAE8AcgBpAGcAaQBuAGEAbABGAGkAbABlAG4AYQBtAGUAAABTAEMAXwA1ADQA
YQAwADgANgBjAGMAZABjAGEANAA0AGYAMQBjADkAYQA3ADMAZQAwADUAYQA3AGEANQA4ADYAYQBk
ADQALgBkAGwAbAAAAGgAJAABAFAAcgBvAGQAdQBjAHQATgBhAG0AZQAAAAAAUwBDAF8ANQA0AGEA
MAA4ADYAYwBjAGQAYwBhADQANABmADEAYwA5AGEANwAzAGUAMAA1AGEANwBhADUAOAA2AGEAZAA0
AAAANAAIAAEAUAByAG8AZAB1AGMAdABWAGUAcgBzAGkAbwBuAAAAMQAuADAALgAwAC4AMAAAADgA
CAABAEEAcwBzAGUAbQBiAGwAeQAgAFYAZQByAHMAaQBvAG4AAAAxAC4AMAAuADAALgAwAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAAAAwAAADgNAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                  name="VSTAProjectName"
                  typeConverter="NOTBROWSABLE">SC_54a086ccdca44f1c9a73e05a7a586ad4</property>
                <property
                  dataType="System.String"
                  description="Specifies the programming language used by the script."
                  name="ScriptLanguage"
                  typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages">CSharp</property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read-only variables."
                  name="ReadOnlyVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg"></property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read/write variables."
                  name="ReadWriteVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg"></property>
                <property
                  dataType="System.String"
                  description="List of breakpoints present on the script."
                  isArray="true"
                  name="BreakpointCollection"
                  typeConverter="NOTBROWSABLE">
                  <arrayElements
                    arrayElementCount="0" />
                </property>
                <property
                  dataType="System.String"
                  description="Checksum to match component metedata against compiled codes."
                  name="MetadataChecksum140"
                  typeConverter="NOTBROWSABLE">3D</property>
                <property
                  dataType="System.String"
                  name="UserComponentTypeName">Microsoft.ScriptComponentHost</property>
              </properties>
              <connections>
                <connection
                  refId="Package\Data Flow Task\SplitPropertyAddress.Connections[Connection]"
                  connectionManagerID="Package.ConnectionManagers[Excel Connection Manager]"
                  connectionManagerRefId="Package.ConnectionManagers[Excel Connection Manager]"
                  name="Connection" />
              </connections>
              <inputs>
                <input
                  refId="Package\Data Flow Task\SplitPropertyAddress.Inputs[Input 0]"
                  hasSideEffects="true"
                  name="Input 0">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Data Flow Task\SplitPropertyAddress.Inputs[Input 0].Columns[PropertyAddress]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="PropertyAddress"
                      lineageId="Package\Data Flow Task\Excel Source.Outputs[Excel Source Output].Columns[PropertyAddress]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Data Flow Task\SplitPropertyAddress.Outputs[Output 0]"
                  name="Output 0"
                  synchronousInputId="Package\Data Flow Task\SplitPropertyAddress.Inputs[Input 0]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Data Flow Task\SplitPropertyAddress.Outputs[Output 0].Columns[PropertyAddressOut]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Data Flow Task\SplitPropertyAddress.Outputs[Output 0].Columns[PropertyAddressOut]"
                      name="PropertyAddressOut" />
                    <outputColumn
                      refId="Package\Data Flow Task\SplitPropertyAddress.Outputs[Output 0].Columns[PropertyCityOut]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Data Flow Task\SplitPropertyAddress.Outputs[Output 0].Columns[PropertyCityOut]"
                      name="PropertyCityOut" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Data Flow Task\SQL_NashvilleHousingData"
              componentClassID="Microsoft.OLEDBDestination"
              contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
              description="OLE DB Destination"
              name="SQL_NashvilleHousingData"
              usesDispositions="true"
              version="4">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">[dbo].[Nahsville_Housing_Data]</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">3</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepIdentity">false</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepNulls">false</property>
                <property
                  dataType="System.String"
                  description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                  name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                <property
                  dataType="System.Int32"
                  description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                  name="FastLoadMaxInsertCommitSize">2147483647</property>
              </properties>
              <connections>
                <connection
                  refId="Package\Data Flow Task\SQL_NashvilleHousingData.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[TPV.Sandbox]"
                  connectionManagerRefId="Package.ConnectionManagers[TPV.Sandbox]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\Data Flow Task\SQL_NashvilleHousingData.Inputs[OLE DB Destination Input]"
                  errorOrTruncationOperation="Insert"
                  errorRowDisposition="FailComponent"
                  hasSideEffects="true"
                  name="OLE DB Destination Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Data Flow Task\SQL_NashvilleHousingData.Inputs[OLE DB Destination Input].Columns[ParcelID]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="ParcelID"
                      externalMetadataColumnId="Package\Data Flow Task\SQL_NashvilleHousingData.Inputs[OLE DB Destination Input].ExternalColumns[ParcelID]"
                      lineageId="Package\Data Flow Task\Excel Source.Outputs[Excel Source Output].Columns[ParcelID]" />
                    <inputColumn
                      refId="Package\Data Flow Task\SQL_NashvilleHousingData.Inputs[OLE DB Destination Input].Columns[PropertyAddressOut]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="PropertyAddressOut"
                      externalMetadataColumnId="Package\Data Flow Task\SQL_NashvilleHousingData.Inputs[OLE DB Destination Input].ExternalColumns[Property_Address]"
                      lineageId="Package\Data Flow Task\SplitPropertyAddress.Outputs[Output 0].Columns[PropertyAddressOut]" />
                    <inputColumn
                      refId="Package\Data Flow Task\SQL_NashvilleHousingData.Inputs[OLE DB Destination Input].Columns[PropertyCityOut]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="PropertyCityOut"
                      externalMetadataColumnId="Package\Data Flow Task\SQL_NashvilleHousingData.Inputs[OLE DB Destination Input].ExternalColumns[Property_City]"
                      lineageId="Package\Data Flow Task\SplitPropertyAddress.Outputs[Output 0].Columns[PropertyCityOut]" />
                    <inputColumn
                      refId="Package\Data Flow Task\SQL_NashvilleHousingData.Inputs[OLE DB Destination Input].Columns[LandUse]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="LandUse"
                      externalMetadataColumnId="Package\Data Flow Task\SQL_NashvilleHousingData.Inputs[OLE DB Destination Input].ExternalColumns[Land_Use]"
                      lineageId="Package\Data Flow Task\Excel Source.Outputs[Excel Source Output].Columns[LandUse]" />
                    <inputColumn
                      refId="Package\Data Flow Task\SQL_NashvilleHousingData.Inputs[OLE DB Destination Input].Columns[Copy of SaleDate]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="Copy of SaleDate"
                      externalMetadataColumnId="Package\Data Flow Task\SQL_NashvilleHousingData.Inputs[OLE DB Destination Input].ExternalColumns[Sale_Date]"
                      lineageId="Package\Data Flow Task\Convert Data.Outputs[Data Conversion Output].Columns[Copy of SaleDate]" />
                    <inputColumn
                      refId="Package\Data Flow Task\SQL_NashvilleHousingData.Inputs[OLE DB Destination Input].Columns[Copy of SalePrice]"
                      cachedDataType="i4"
                      cachedName="Copy of SalePrice"
                      externalMetadataColumnId="Package\Data Flow Task\SQL_NashvilleHousingData.Inputs[OLE DB Destination Input].ExternalColumns[Sale_Price]"
                      lineageId="Package\Data Flow Task\Convert Data.Outputs[Data Conversion Output].Columns[Copy of SalePrice]" />
                    <inputColumn
                      refId="Package\Data Flow Task\SQL_NashvilleHousingData.Inputs[OLE DB Destination Input].Columns[LegalReference]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="LegalReference"
                      externalMetadataColumnId="Package\Data Flow Task\SQL_NashvilleHousingData.Inputs[OLE DB Destination Input].ExternalColumns[Legal_reference]"
                      lineageId="Package\Data Flow Task\Excel Source.Outputs[Excel Source Output].Columns[LegalReference]" />
                    <inputColumn
                      refId="Package\Data Flow Task\SQL_NashvilleHousingData.Inputs[OLE DB Destination Input].Columns[SoldAsVacant_Bool]"
                      cachedDataType="bool"
                      cachedName="SoldAsVacant_Bool"
                      externalMetadataColumnId="Package\Data Flow Task\SQL_NashvilleHousingData.Inputs[OLE DB Destination Input].ExternalColumns[Sold_As_Vacant]"
                      lineageId="Package\Data Flow Task\Convert SoldAsVacant to boolean.Outputs[Derived Column Output].Columns[SoldAsVacant_Bool]" />
                    <inputColumn
                      refId="Package\Data Flow Task\SQL_NashvilleHousingData.Inputs[OLE DB Destination Input].Columns[OwnerName]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="OwnerName"
                      externalMetadataColumnId="Package\Data Flow Task\SQL_NashvilleHousingData.Inputs[OLE DB Destination Input].ExternalColumns[Owner_name]"
                      lineageId="Package\Data Flow Task\Excel Source.Outputs[Excel Source Output].Columns[OwnerName]" />
                    <inputColumn
                      refId="Package\Data Flow Task\SQL_NashvilleHousingData.Inputs[OLE DB Destination Input].Columns[Owner_Address_Out]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="Owner_Address_Out"
                      externalMetadataColumnId="Package\Data Flow Task\SQL_NashvilleHousingData.Inputs[OLE DB Destination Input].ExternalColumns[Owner_Address]"
                      lineageId="Package\Data Flow Task\SplitOwnerAddress.Outputs[Output 0].Columns[Owner_Address_Out]" />
                    <inputColumn
                      refId="Package\Data Flow Task\SQL_NashvilleHousingData.Inputs[OLE DB Destination Input].Columns[Owner_City_Out]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="Owner_City_Out"
                      externalMetadataColumnId="Package\Data Flow Task\SQL_NashvilleHousingData.Inputs[OLE DB Destination Input].ExternalColumns[Owner_City]"
                      lineageId="Package\Data Flow Task\SplitOwnerAddress.Outputs[Output 0].Columns[Owner_City_Out]" />
                    <inputColumn
                      refId="Package\Data Flow Task\SQL_NashvilleHousingData.Inputs[OLE DB Destination Input].Columns[Owner_State_Out]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="Owner_State_Out"
                      externalMetadataColumnId="Package\Data Flow Task\SQL_NashvilleHousingData.Inputs[OLE DB Destination Input].ExternalColumns[Onwer_State]"
                      lineageId="Package\Data Flow Task\SplitOwnerAddress.Outputs[Output 0].Columns[Owner_State_Out]" />
                    <inputColumn
                      refId="Package\Data Flow Task\SQL_NashvilleHousingData.Inputs[OLE DB Destination Input].Columns[Copy of Acreage]"
                      cachedDataType="numeric"
                      cachedName="Copy of Acreage"
                      cachedPrecision="18"
                      externalMetadataColumnId="Package\Data Flow Task\SQL_NashvilleHousingData.Inputs[OLE DB Destination Input].ExternalColumns[Acreage]"
                      lineageId="Package\Data Flow Task\Convert Data.Outputs[Data Conversion Output].Columns[Copy of Acreage]" />
                    <inputColumn
                      refId="Package\Data Flow Task\SQL_NashvilleHousingData.Inputs[OLE DB Destination Input].Columns[Copy of TaxDistrict]"
                      cachedDataType="wstr"
                      cachedLength="100"
                      cachedName="Copy of TaxDistrict"
                      externalMetadataColumnId="Package\Data Flow Task\SQL_NashvilleHousingData.Inputs[OLE DB Destination Input].ExternalColumns[Tax_District]"
                      lineageId="Package\Data Flow Task\Convert Data.Outputs[Data Conversion Output].Columns[Copy of TaxDistrict]" />
                    <inputColumn
                      refId="Package\Data Flow Task\SQL_NashvilleHousingData.Inputs[OLE DB Destination Input].Columns[Copy of LandValue]"
                      cachedDataType="i4"
                      cachedName="Copy of LandValue"
                      externalMetadataColumnId="Package\Data Flow Task\SQL_NashvilleHousingData.Inputs[OLE DB Destination Input].ExternalColumns[Land_Value]"
                      lineageId="Package\Data Flow Task\Convert Data.Outputs[Data Conversion Output].Columns[Copy of LandValue]" />
                    <inputColumn
                      refId="Package\Data Flow Task\SQL_NashvilleHousingData.Inputs[OLE DB Destination Input].Columns[Copy of BuildingValue]"
                      cachedDataType="i4"
                      cachedName="Copy of BuildingValue"
                      externalMetadataColumnId="Package\Data Flow Task\SQL_NashvilleHousingData.Inputs[OLE DB Destination Input].ExternalColumns[Building_Value]"
                      lineageId="Package\Data Flow Task\Convert Data.Outputs[Data Conversion Output].Columns[Copy of BuildingValue]" />
                    <inputColumn
                      refId="Package\Data Flow Task\SQL_NashvilleHousingData.Inputs[OLE DB Destination Input].Columns[Copy of YearBuilt]"
                      cachedDataType="wstr"
                      cachedLength="10"
                      cachedName="Copy of YearBuilt"
                      externalMetadataColumnId="Package\Data Flow Task\SQL_NashvilleHousingData.Inputs[OLE DB Destination Input].ExternalColumns[Year_Build]"
                      lineageId="Package\Data Flow Task\Convert Data.Outputs[Data Conversion Output].Columns[Copy of YearBuilt]" />
                    <inputColumn
                      refId="Package\Data Flow Task\SQL_NashvilleHousingData.Inputs[OLE DB Destination Input].Columns[Copy of Bedrooms]"
                      cachedDataType="i4"
                      cachedName="Copy of Bedrooms"
                      externalMetadataColumnId="Package\Data Flow Task\SQL_NashvilleHousingData.Inputs[OLE DB Destination Input].ExternalColumns[Bedrooms]"
                      lineageId="Package\Data Flow Task\Convert Data.Outputs[Data Conversion Output].Columns[Copy of Bedrooms]" />
                    <inputColumn
                      refId="Package\Data Flow Task\SQL_NashvilleHousingData.Inputs[OLE DB Destination Input].Columns[Copy of FullBath]"
                      cachedDataType="i4"
                      cachedName="Copy of FullBath"
                      externalMetadataColumnId="Package\Data Flow Task\SQL_NashvilleHousingData.Inputs[OLE DB Destination Input].ExternalColumns[FullBath]"
                      lineageId="Package\Data Flow Task\Convert Data.Outputs[Data Conversion Output].Columns[Copy of FullBath]" />
                    <inputColumn
                      refId="Package\Data Flow Task\SQL_NashvilleHousingData.Inputs[OLE DB Destination Input].Columns[Copy of HalfBath]"
                      cachedDataType="i4"
                      cachedName="Copy of HalfBath"
                      externalMetadataColumnId="Package\Data Flow Task\SQL_NashvilleHousingData.Inputs[OLE DB Destination Input].ExternalColumns[halfBath]"
                      lineageId="Package\Data Flow Task\Convert Data.Outputs[Data Conversion Output].Columns[Copy of HalfBath]" />
                    <inputColumn
                      refId="Package\Data Flow Task\SQL_NashvilleHousingData.Inputs[OLE DB Destination Input].Columns[Copy of UniqueID]"
                      cachedDataType="i4"
                      cachedName="Copy of UniqueID"
                      externalMetadataColumnId="Package\Data Flow Task\SQL_NashvilleHousingData.Inputs[OLE DB Destination Input].ExternalColumns[UniqueID]"
                      lineageId="Package\Data Flow Task\Convert Data.Outputs[Data Conversion Output].Columns[Copy of UniqueID]" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Data Flow Task\SQL_NashvilleHousingData.Inputs[OLE DB Destination Input].ExternalColumns[UniqueID]"
                      dataType="i4"
                      name="UniqueID" />
                    <externalMetadataColumn
                      refId="Package\Data Flow Task\SQL_NashvilleHousingData.Inputs[OLE DB Destination Input].ExternalColumns[ParcelID]"
                      dataType="wstr"
                      length="50"
                      name="ParcelID" />
                    <externalMetadataColumn
                      refId="Package\Data Flow Task\SQL_NashvilleHousingData.Inputs[OLE DB Destination Input].ExternalColumns[Land_Use]"
                      dataType="wstr"
                      length="50"
                      name="Land_Use" />
                    <externalMetadataColumn
                      refId="Package\Data Flow Task\SQL_NashvilleHousingData.Inputs[OLE DB Destination Input].ExternalColumns[Property_Address]"
                      dataType="wstr"
                      length="255"
                      name="Property_Address" />
                    <externalMetadataColumn
                      refId="Package\Data Flow Task\SQL_NashvilleHousingData.Inputs[OLE DB Destination Input].ExternalColumns[Property_City]"
                      dataType="wstr"
                      length="255"
                      name="Property_City" />
                    <externalMetadataColumn
                      refId="Package\Data Flow Task\SQL_NashvilleHousingData.Inputs[OLE DB Destination Input].ExternalColumns[Sale_Date]"
                      dataType="wstr"
                      length="10"
                      name="Sale_Date" />
                    <externalMetadataColumn
                      refId="Package\Data Flow Task\SQL_NashvilleHousingData.Inputs[OLE DB Destination Input].ExternalColumns[Sale_Price]"
                      dataType="i4"
                      name="Sale_Price" />
                    <externalMetadataColumn
                      refId="Package\Data Flow Task\SQL_NashvilleHousingData.Inputs[OLE DB Destination Input].ExternalColumns[Legal_reference]"
                      dataType="wstr"
                      length="255"
                      name="Legal_reference" />
                    <externalMetadataColumn
                      refId="Package\Data Flow Task\SQL_NashvilleHousingData.Inputs[OLE DB Destination Input].ExternalColumns[Sold_As_Vacant]"
                      dataType="bool"
                      name="Sold_As_Vacant" />
                    <externalMetadataColumn
                      refId="Package\Data Flow Task\SQL_NashvilleHousingData.Inputs[OLE DB Destination Input].ExternalColumns[Owner_name]"
                      dataType="wstr"
                      length="255"
                      name="Owner_name" />
                    <externalMetadataColumn
                      refId="Package\Data Flow Task\SQL_NashvilleHousingData.Inputs[OLE DB Destination Input].ExternalColumns[Owner_Address]"
                      dataType="wstr"
                      length="255"
                      name="Owner_Address" />
                    <externalMetadataColumn
                      refId="Package\Data Flow Task\SQL_NashvilleHousingData.Inputs[OLE DB Destination Input].ExternalColumns[Owner_City]"
                      dataType="wstr"
                      length="255"
                      name="Owner_City" />
                    <externalMetadataColumn
                      refId="Package\Data Flow Task\SQL_NashvilleHousingData.Inputs[OLE DB Destination Input].ExternalColumns[Onwer_State]"
                      dataType="wstr"
                      length="2"
                      name="Onwer_State" />
                    <externalMetadataColumn
                      refId="Package\Data Flow Task\SQL_NashvilleHousingData.Inputs[OLE DB Destination Input].ExternalColumns[Acreage]"
                      dataType="numeric"
                      name="Acreage"
                      precision="18"
                      scale="2" />
                    <externalMetadataColumn
                      refId="Package\Data Flow Task\SQL_NashvilleHousingData.Inputs[OLE DB Destination Input].ExternalColumns[Tax_District]"
                      dataType="wstr"
                      length="100"
                      name="Tax_District" />
                    <externalMetadataColumn
                      refId="Package\Data Flow Task\SQL_NashvilleHousingData.Inputs[OLE DB Destination Input].ExternalColumns[Land_Value]"
                      dataType="i4"
                      name="Land_Value" />
                    <externalMetadataColumn
                      refId="Package\Data Flow Task\SQL_NashvilleHousingData.Inputs[OLE DB Destination Input].ExternalColumns[Building_Value]"
                      dataType="i4"
                      name="Building_Value" />
                    <externalMetadataColumn
                      refId="Package\Data Flow Task\SQL_NashvilleHousingData.Inputs[OLE DB Destination Input].ExternalColumns[Year_Build]"
                      dataType="wstr"
                      length="10"
                      name="Year_Build" />
                    <externalMetadataColumn
                      refId="Package\Data Flow Task\SQL_NashvilleHousingData.Inputs[OLE DB Destination Input].ExternalColumns[Bedrooms]"
                      dataType="i4"
                      name="Bedrooms" />
                    <externalMetadataColumn
                      refId="Package\Data Flow Task\SQL_NashvilleHousingData.Inputs[OLE DB Destination Input].ExternalColumns[FullBath]"
                      dataType="i4"
                      name="FullBath" />
                    <externalMetadataColumn
                      refId="Package\Data Flow Task\SQL_NashvilleHousingData.Inputs[OLE DB Destination Input].ExternalColumns[halfBath]"
                      dataType="i4"
                      name="halfBath" />
                  </externalMetadataColumns>
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Data Flow Task\SQL_NashvilleHousingData.Outputs[OLE DB Destination Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="OLE DB Destination Error Output"
                  synchronousInputId="Package\Data Flow Task\SQL_NashvilleHousingData.Inputs[OLE DB Destination Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Data Flow Task\SQL_NashvilleHousingData.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Data Flow Task\SQL_NashvilleHousingData.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Data Flow Task\SQL_NashvilleHousingData.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Data Flow Task\SQL_NashvilleHousingData.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
          </components>
          <paths>
            <path
              refId="Package\Data Flow Task.Paths[Data Conversion Output]"
              endId="Package\Data Flow Task\SplitPropertyAddress.Inputs[Input 0]"
              name="Data Conversion Output"
              startId="Package\Data Flow Task\Convert Data.Outputs[Data Conversion Output]" />
            <path
              refId="Package\Data Flow Task.Paths[Derived Column Output]"
              endId="Package\Data Flow Task\SQL_NashvilleHousingData.Inputs[OLE DB Destination Input]"
              name="Derived Column Output"
              startId="Package\Data Flow Task\Convert SoldAsVacant to boolean.Outputs[Derived Column Output]" />
            <path
              refId="Package\Data Flow Task.Paths[Excel Source Output]"
              endId="Package\Data Flow Task\Convert Data.Inputs[Data Conversion Input]"
              name="Excel Source Output"
              startId="Package\Data Flow Task\Excel Source.Outputs[Excel Source Output]" />
            <path
              refId="Package\Data Flow Task.Paths[Output 0]"
              endId="Package\Data Flow Task\SplitOwnerAddress.Inputs[Input 0]"
              name="Output 0"
              startId="Package\Data Flow Task\SplitPropertyAddress.Outputs[Output 0]" />
            <path
              refId="Package\Data Flow Task.Paths[Output 01]"
              endId="Package\Data Flow Task\Convert SoldAsVacant to boolean.Inputs[Derived Column Input]"
              name="Output 0"
              startId="Package\Data Flow Task\SplitOwnerAddress.Outputs[Output 0]" />
          </paths>
        </pipeline>
      </DTS:ObjectData>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="8">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph">
        <NodeLayout
          Size="150.4,41.6"
          Id="Package\Data Flow Task"
          TopLeft="5.5,5.5" />
      </GraphLayout>
    </LayoutInfo>
  </Package>
  <TaskHost
    design-time-name="Package\Data Flow Task">
    <LayoutInfo>
      <GraphLayout
        Capacity="16" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="140,41.6"
          Id="Package\Data Flow Task\Excel Source"
          TopLeft="29.6666653462583,7.23333332127995" />
        <NodeLayout
          Size="167.2,41.6"
          Id="Package\Data Flow Task\SplitOwnerAddress"
          TopLeft="43.3333309657044,252.199998246233" />
        <NodeLayout
          Size="176,41.6"
          Id="Package\Data Flow Task\SplitPropertyAddress"
          TopLeft="28.3333317852682,164.666665521595" />
        <NodeLayout
          Size="168.8,41.6"
          Id="Package\Data Flow Task\Convert Data"
          TopLeft="9.99999945362407,83.1999994214377" />
        <EdgeLayout
          Id="Package\Data Flow Task.Paths[Data Conversion Output]"
          TopLeft="94.3999994536241,124.799999421438">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="21.9333323316441,39.8666661001573"
              Start="0,0"
              End="21.9333323316441,32.3666661001573">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,15.9333330500787" />
                  <mssgle:CubicBezierSegment
                    Point1="0,15.9333330500787"
                    Point2="0,19.9333330500787"
                    Point3="4,19.9333330500787" />
                  <mssgle:LineSegment
                    End="17.9333323316441,19.9333330500787" />
                  <mssgle:CubicBezierSegment
                    Point1="17.9333323316441,19.9333330500787"
                    Point2="21.9333323316441,19.9333330500787"
                    Point3="21.9333323316441,23.9333330500787" />
                  <mssgle:LineSegment
                    End="21.9333323316441,32.3666661001573" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Data Flow Task.Paths[Output 0]"
          TopLeft="116.333331785268,206.266665521595">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="10.5999991804363,45.9333327246378"
              Start="0,0"
              End="10.5999991804363,38.4333327246378">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,18.9666663623189" />
                  <mssgle:CubicBezierSegment
                    Point1="0,18.9666663623189"
                    Point2="0,22.9666663623189"
                    Point3="4,22.9666663623189" />
                  <mssgle:LineSegment
                    End="6.59999918043626,22.9666663623189" />
                  <mssgle:CubicBezierSegment
                    Point1="6.59999918043626,22.9666663623189"
                    Point2="10.5999991804363,22.9666663623189"
                    Point3="10.5999991804363,26.9666663623189" />
                  <mssgle:LineSegment
                    End="10.5999991804363,38.4333327246378" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Data Flow Task.Paths[Excel Source Output]"
          TopLeft="97.0333323999412,48.83333332128">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,34.3666661001577"
              Start="0,0"
              End="0,26.8666661001577">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,26.8666661001577" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <NodeLayout
          Size="234.4,41.6"
          Id="Package\Data Flow Task\Convert SoldAsVacant to boolean"
          TopLeft="6.66666630241599,329.33333104319" />
        <EdgeLayout
          Id="Package\Data Flow Task.Paths[Output 01]"
          TopLeft="125.39999863406,293.799998246233">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,35.5333327969576"
              Start="0,0"
              End="0,28.0333327969576">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,28.0333327969576" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <NodeLayout
          Size="207.2,41.6"
          Id="Package\Data Flow Task\SQL_NashvilleHousingData"
          TopLeft="30.8333316486743,424.666663713588" />
        <EdgeLayout
          Id="Package\Data Flow Task.Paths[Derived Column Output]"
          TopLeft="123.866666302416,370.93333104319">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-43.4333346537417,53.7333326703973"
              Start="0,0"
              End="-43.4333346537417,46.2333326703973">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,22.8666663351986" />
                  <mssgle:CubicBezierSegment
                    Point1="0,22.8666663351986"
                    Point2="0,26.8666663351986"
                    Point3="-4,26.8666663351986" />
                  <mssgle:LineSegment
                    End="-39.4333346537417,26.8666663351986" />
                  <mssgle:CubicBezierSegment
                    Point1="-39.4333346537417,26.8666663351986"
                    Point2="-43.4333346537417,26.8666663351986"
                    Point3="-43.4333346537417,30.8666663351986" />
                  <mssgle:LineSegment
                    End="-43.4333346537417,46.2333326703973" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\Data Flow Task\Excel Source">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Data Flow Task\SQL_NashvilleHousingData">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>